oncotarget oncotarget oncotarget impactj oncotarget 1949 - 2553 impact journals llc 29416792 5788660 23511 10.18632 / oncotarget.23511 research paper cancerdiscover : an integrative pipeline for cancer biomarker and cancer class prediction from high - throughput sequencing data mohammed akram 1 biegert greyson 1 adamec jiri 1 helikar tomas 1 1 department of biochemistry , university of nebraska - lincoln , lincoln , nebraska , united states of america correspondence to : tomas helikar , thelikar2 @ unl.edu 5 1 2018 20 12 2017 9 2 2565 2573 28 9 2017 9 12 2017 copyright : ( c ) 2018 mohammed et al .
2018 this is an open - access article distributed under the terms of the creative commons attribution license 3.0 ( cc by 3.0 ) , which permits unrestricted use , distribution , and reproduction in any medium , provided the original author and source are credited .
accurate identification of cancer biomarkers and classification of cancer type and subtype from high throughput sequencing ( hts ) data is a challenging problem because it requires manual processing of raw hts data from various sequencing platforms , quality control , and normalization , which are both tedious and time - consuming .
machine learning techniques for cancer class prediction and biomarker discovery can hasten cancer detection and significantly improve prognosis .
to date , great research efforts have been taken for cancer biomarker identification and cancer class prediction .
however , currently available tools and pipelines lack flexibility in data preprocessing , running multiple feature selection methods and learning algorithms , therefore , developing a freely available and easy - to - use program is strongly demanded by researchers .
here , we propose cancerdiscover , an integrative open - source software pipeline that allows users to automatically and efficiently process large high - throughput raw datasets , normalize , and selects best performing features from multiple feature selection algorithms .
additionally , the integrative pipeline lets users apply different feature thresholds to identify cancer biomarkers and build various training models to distinguish different types and subtypes of cancer .
the open - source software is available at https :// github.com / helikarlab / cancerdiscover and is free for use under the gpl3 license .
open - source cancer classification gene expression machine learning cancer biomarker introduction classification of a tissue sample as cancer or normal and among different tissue subtypes facilitates cancer treatment , and high - throughput techniques generate massive amounts of cancer data .
machine learning ( ml ) has the potential to improve such classification , and the traditional motivation behind ml feature selection algorithms is to find the optimal subset of features .
however , no single feature selection algorithm or classification algorithm can provide the best set of features and classifiers [ 1 ] .
therefore , there is a need to develop a pipeline that lets users apply different feature selection algorithms , feature thresholds , and various classification algorithms to generate accurate prediction models and evaluation reports that distinguish cancer from normal samples , as well as different types and subtypes of cancer .
remarkable efforts have been put to develop gene expression analysis tools and databases for cancer high - throughput data [ 2 - 11 ] .
several machine learning tools have been developed to study cancer classification [ 12 - 16 ] .
however , classifusion [ 14 ] , esvm [ 15 ] , prophet [ 16 ] are either not available , abandoned or not maintained .
the available platforms require processed raw data that have been normalized to address various technical and statistical challenges such as , gene expression value differences within the datasets and sequencing platform bias .
moreover , different analysis steps have to be performed manually by various tools , often using different software platforms .
these long and manual processing steps are not only time - consuming but also error - prone , making high - quality , large - scale ml analyses difficult .
to this end , we have developed cancerdiscover , an integrative software pipeline , which , given raw , bulk high - throughput data from various platforms , can perform quality checks , normalize the data , select the most important features from multiple feature selection algorithms , and build and evaluate different machine learning models in a streamlined fashion .
unlike software tools that require manual processing and are limited in feature selection and classification algorithm options ( e.g. , genepattern [ 13 ] and chipster [ 12 ]) , cancerdiscover is a fully automated pipeline , while providing users with full control over each analysis step .
cancerdiscover is complementary to the data repositories , data visualization , and the software tools such as oncomine [ 9 ] , indeed [ 10 ] and cbioportal [ 11 ] that support data visualization and analysis of differential gene expression .
herein , we describe the open - source software and demonstrate its utility and flexibility through a case study .
we also demonstrated the utility of cancerdiscover pipeline using 2,175 gene expression samples from nine tissue types to identify tissue - specific biomarkers ( gene sets ) whose expression is characteristic of each cancer class and built single - tissue and multi - tissue models [ 17 ] .
in the end , we provided the benchmarking statistics using cancerdiscover for datasets of varying sizes .
results and discussion implementation the purpose of cancerdiscover pipeline tool is to allow users to efficiently and automatically process large high - throughput datasets by transforming various raw datasets and selecting best performing features from multiple feature selection algorithms .
the pipeline lets users apply different feature thresholds and various learning algorithms to generate multiple prediction models that distinguish different types and subtypes of cancer .
cancerdiscover takes raw datasets , normalizes it , generates weka [ 18 ] - native ( attribute - relation file format : arff ) input files .
the pipeline is illustrated in figure 1 .
cancerdiscover consists of eight components : normalization , preliminary feature vector generation , preliminary data partitioning , feature selection , feature vector generation , data partitioning , model training and model testing .
these components are organized into three scripts ( masterscript _ 1 , masterscript _ 2 , and masterscript _ 3 ) .
in addition to bash , the cancerdiscover pipeline is also implemented in slurm ( simple linux utility for resource management ) to make it available for high - performance computing clusters .
figure 1 schematic representation of the cancerdiscover pipeline first , raw data are normalized , background correction is performed , and the output is partitioned into training and testing sets .
the test set is held in reserve for model testing while the training set undergoes a feature selection method .
feature selection provides a list of ranked attributes that are subsequently used to rebuild the training and testing sets .
the training dataset is subsequently used to build machine learning models .
finally , the testing data set is used for model testing .
( 1 ) .
normalization : due to the inherent differences among samples obtained from various studies , normalization and background corrections are required to remove or subdue bias in raw data for accurate models .
once raw high - throughput data is obtained , normalization and background corrections are performed to remove the technical variation from noisy data and background noise from signal intensities and generated the expression set matrix ( for example , gene expression intensity values , etc. ) .
( 2 ) .
preliminary feature vector generation : next , the expression set matrix is used to create the master feature vector in the weka - native file format ( arff ) .
( 3 ) .
preliminary data partitioning ( stratified ) : stratified data partitioning was used by splitting the master feature vector into training and testing sets to maintain an even distribution of class distribution .
these training sets are used to construct the models after feature selection has been performed in the next step .
later , the model 's accuracy will be assessed with the testing set , which had not been exposed to the model , giving an honest assessment of the model .
users of cancerdiscover can specify the size of the data partition of their choice in the pipeline .
( 4 ) .
feature selection ( on training data set only ) : our pipeline offers the ability to select multiple feature selection algorithms .
each of these algorithms provides the list of ranked features that distinguish different types and subtypes of cancer .
users can choose different feature thresholds and can explore the relationship between the number of features considered by the classification algorithms and model accuracy .
for example , the feature sets generated can be separated into different feature thresholds ( including the top 1 % , 10 % , 33 % , 66 % , 100 % of the total number of ranked features as well as the top 25 , 50 and 100 ranked features ) .
users can also arbitrarily choose these thresholds to identify the minimum number of features needed to achieve accurate classification models .
for a list of available feature selection methods , see supplementary file 2 .
( 5 ) .
feature vector generation : since the classification models must be built based only on the ranked features , new feature vectors are generated based on the ranked feature sets .
( 6 ) .
data partitioning ( stratified ) : once the new feature vectors are generated , each feature vectors file will undergo a second data partitioning .
this partitioning seed value ( or integer that defines the exact sequence of a pseudo - random number ) is the same as the one used in the preliminary data partitioning .
as such , each new feature vector will be split into the same training and testing sets as in step 3 .
the master training and testing feature vectors and the new training and testing feature vectors differ only in the number of features ; the master feature vectors contain all of the features , whereas the newly created feature vectors contain only the features that ranked according to different thresholds ( dimensionality reduction ) .
( 7 ) .
model training : cancerdiscover provides a diverse set of machine learning classification algorithms and allows the user to build models as they see fit .
each new training dataset from the above step undergoes machine learning model construction using stratified k - fold cross - validation to identify the optimal model .
( 8 ) .
model testing : the model performance was assessed by testing its accuracy using the testing dataset that was kept hidden from the model .
the model can also be used to predict the class labels for the samples in the unknown dataset .
in the case study below , we illustrate the utility of the software to classify normal vs. cancerous tissues and adenocarcinoma vs. squamous carcinoma based on gene expression data .
installation / operation cancerdiscover software is available at https :// github.com / helikarlab / cancerdiscover all the components of the pipeline are organized into three scripts ( namely masterscript _ 1 , masterscript _ 2 , and masterscript _ 3 ) , each of which is composed of several scripts ( perl , awk , shell , bash , r , and slurm ) .
the detailed installation / operation of the pipeline is described in the supplementary file 1 .
there are two versions of the cancerdiscover pipeline : the beginner version consists of bash scripts that can be run on the local machine and an advanced version that consists of slurm ( simple linux utility for resource management ) scripts that can be run on a high - performance computer ( hpc ) .
slurm is a computational architecture used to organize user requests into a queue to utilize high - performance computing resources .
due to the sheer size of the high - throughput data and complexity of data processing steps , it is recommended to use cancerdiscover on a high - performance compute cluster .
the command - line pipeline is compatible with linux os and mac osx .
case study two kinds of ml models were generated and tested to illustrate the possible application of the pipeline .
the first model was developed to classify tissue samples as either cancerous or normal , according to their gene expression patterns .
sample distributions were as follows : 237 tumor tissue samples and 17 histologically normal tissue samples split evenly into testing and training data sets .
the quantile normalization method [ 19 ] was used to normalize the data , and the background correction was performed using the robust multichip average ( rma ) [ 20 ] parameter method by modifying the configuration file for the case study presented in the paper .
filtered attribute evaluator combined with ranker method was the algorithm selected ( using pipeline configuration file ) to perform feature selection on the training dataset .
this algorithm outputs a list of all data features ranked according to their utility in distinguishing the different classes of samples ; features ranked at the top of the list are most useful in distinguishing cancer from normal samples .
the plates used for this case study contain approximately 10,000 full - length genes corresponding to 12,625 probes ( features ) .
the top ( 0.25 % , 0.5 % , 1 % , 10 % , 33 % , 100 %) ranked features , as well as additional feature sets containing the top ( 3 , 6 , 12 , 100 , 500 ) features were used for generating several models simultaneously .
training and testing accuracies are reported in figure 2a - 2d .
we selected rf and svm as the machine learning classification algorithms for the case study .
figure 2 model accuracies for the classification of tumor vs. normal and adenocarcinoma vs. squamous cell carcinoma : rf represents random forest classifier and svm indicates support vector machine classifier ( a ) training accuracy for tumor vs. normal model , ( b ) training accuracy for adenocarcinoma vs. squamous cell carcinoma model , ( c ) testing accuracy for tumor vs. normal model , ( d ) testing accuracy for adenocarcinoma vs. squamous cell carcinoma model .
we achieved a model training accuracy of 98.43 % for the rf classifier using the top 0.25 % ( 31 attributes ) of features .
models constructed using the top 3 % of ranked features reported an accuracy of 96.06 % , while models using the entire list of features ( 100 %) resulted in the lowest accuracy of 93.70 % .
training accuracies for the svm classifier were 99.21 % for the models that used the top 3 features .
accuracy declined with the increasing number of features , with models that used the top 12 ranked features reporting an accuracy of 98.43 % .
svm resulted in the lowest ( though still relatively high ) accuracy of 97.64 % using 100 features .
as few as the top 31 features are sufficient to achieve a higher accuracy , using random forest classifiers , whereas top 3 features are sufficient to achieve a higher accuracy using support vector machines .
the second set of models was also bi - class ; however , the models were developed to distinguish lung sub - types ( adenocarcinoma vs. squamous cell carcinoma ) , rather than tumor vs. normal tissue .
211 lung adenocarcinoma and squamous cell carcinoma samples were evenly split into training and testing datasets .
after feature selection , the list of ranked features was used to generate models based on different feature thresholds .
results from testing accuracies can be seen in figure 2b. with the entire list of ranked features , the rf testing accuracy was 91.51 % , increasing in accuracy as the percentage or number of ranked features decreased .
the top 1 % of ranked features ( 126 attributes ) resulted in a model testing accuracy of 93.40 % while the top 0.25 % ( 31 attributes ) of ranked features resulted in testing accuracies of 95.28 % .
a similar trend was seen going from the top 500 features to the top 3 features .
on average , svm testing accuracies were more consistent and higher than those based on rf. the model generated with top 3 features resulted in an accuracy of 96.23 % while using the top 6 features led to the accuracy of 95.28 % .
using 100 features resulted in a testing accuracy of 97.17 % .
using the top 0.25 % and 0.5 % resulted in accuracies of 96.23 % and 97.17 % , respectively , while using the top 1 % and 10 % features led to an accuracy of 98.11 % .
using the top 33 % of ranked features resulted in the highest testing accuracy of 99.06 % .
precision , recall , and f1 - score for the models generated using the top 3 features are reported in table 1 .
table 1 accuracies of random forest models using top 3 features training model precision recall f1 - score tumor vs. normal 98.3 98.3 98.3 adeno vs. squamous 97.9 98.9 98.4 as shown in table 1 , we were able to achieve a high degree of accuracy using a small fraction of top - ranked features ( 3 features ) .
this case study illustrates the pipeline 's flexibility , utility , and ease - of - use in the generation of several models simultaneously from raw high - throughput data .
it also highlights the customization allowed by cancerdiscover on the individual steps of a typical high - throughput data analysis pipeline , including the data preprocessing , normalization methods , data partitions , feature selection algorithms , classification algorithms , and the threshold or percentage of ranked features for additional analysis .
cancerdiscover benchmarking benchmarking was performed using 500 samples from acute myeloid leukemia ( aml ) data ( see data collection section for more details ) to assess the performance of the software by running all the feature selection and classification algorithms .
the following sample quantities were used ; 500 , 200 , 100 , 50 and 10 .
each dataset was run through the pipeline performing 23 feature selection algorithms ( see supplementary file 2 for the list of fs methods ) and classification algorithms to determine the required computational resources such as the total amount of elapsed time for each step of the pipeline and the total amount of elapsed time .
these factors , mainly depend on the size of the dataset being processed .
benchmarking was performed using computational resources at the holland computing centre of the university of nebraska - lincoln which has 106 nodes , 4 cpu per nodes .
table 2 below shows the benchmarking results .
table 2 benchmarking results samples feature selection methods models generated normalization ( elapsed time ) feature selection ( elapsed time ) model train & test ( elapsed time ) total 500 20 665 2:05:32 21:45:59 8:05:32 31:57:03 200 20 650 0:52:31 14:16:55 4:49:33 19:58:59 100 20 665 0:26:56 13:31:22 3:12:30 17:00:48 50 20 665 0:16:48 12:06:42 2:58:56 15:12:26 10 19 585 0:07:03 10:05:17 2:14:05 12:26:25 all the datasets contain 54,675 features , and 2 cpus were used for the analysis .
elapsed time refers to the amount of real - time spent processing that function .
for the smallest set containing only ten samples , 19 of the 23 possible feature selection algorithms completed processing ( 4 feature selection algorithms could not be completed due to the 10 - fold cross - validation used ) .
for those 19 feature selection algorithms , 585 classification models were generated ( few of the arff files were empty for the lower feature thresholds due to the small number of samples ) .
the 50 - sample dataset completed 20 of the 23 possible feature selection algorithms , thereby generating 665 classification models .
when using 100 samples , 20 of the 23 possible feature selection algorithms were completed , and subsequently utilized to generate 665 classification models .
the 200 - sample dataset provided 20 of the 23 possible feature selection outputs and produced 650 classification models .
lastly , the 500 - sample dataset contained 20 out of the possible 23 feature selection outputs and generated 665 classification models .
as the datasets grew , the time required for cancer classification increased linearly ( table 2 ) .
comparison of cancerdiscover with other methods we compared the performance of cancerdiscover with that of the three existing methods , genepattern [ 13 ] , chipster [ 12 ] and the method described in aliferis et al .
[ 21 ] .
we used the same train and test datasets to compare the performance of cancerdiscover with these methods .
results of this analysis are summarized in table 3 , supplementary table 1 ( supplementary file 3 ) , and discussed in detail below .
table 3 comparisons of machine learning classification components tool components cancerdiscover genepattern chipster aliferis normalization v - v - background correction v - - - partitioning v - - - feature selection v - - v modeling v v v v this table highlights the capabilities of tools for performing different functions necessary to generate ml models .
genepattern [ 13 ] is a web - based platform that allows users to upload data and perform statistical analysis and class prediction .
due to the nature of the data used in this study , only svm classification suite was used to draw comparisons between cancerdiscover and genepattern .
because genepattern could not perform normalization and background correction for the given datasets , we used the data normalized by the cancerdiscover pipeline ( using rma method ) and provided the normalized data to the svm classification module of genepattern .
the input data contained all probes as genepattern did not provide feature selection options .
ml classification models were generated using the training data with accuracies of 98.43 % for the tumor vs. normal model , and 99.06 % for the adenocarcinoma vs. squamous cell carcinoma model .
these higher accuracies could also be due to the normalization and background correction performed by the cancerdiscover pipeline. of all the three compared software tools , genepattern 's accuracies are most similar to the ones produced by cancerdiscover - 99.21 % and 99.06 % , respectively .
all probes were utilized in the model building since feature selection could not be performed using genepattern .
on the other hand , cancerdiscover was able to achieve similar accuracy by using as few as three probes ( see supplementary table 1 in supplementary file 3 ) .
finally , cancerdiscover differs from the proprietary genepattern by the fact that cancerdiscover is open - source ; as such , its methodologies are transparent and reproducible , and the community can further expand the software .
chipster is developed based on a client - server architecture .
data is imported at the client side , while all processing is performed on the server side using r programming .
it requires that all data need to be transferred between client and server for each analysis step which can be very time - consuming if the datasets are large [ 22 ] .
chipster was not able to successfully perform a classification when we provided the dataset containing all probes .
as a result , feature selection was performed artificially ; that is , the datasets provided to chipster contained only those probes selected by our cancerdiscover feature selection method ; thus , datasets provided included the top 3 , 6 , 12 , 100 , or 500 probes .
raw data in the form of cel files were normalized ( rma normalization ) by chipster .
the accuracy using top 3 probes for the tumor vs. normal model was 97.63 % , whereas , for the adenocarcinoma vs. squamous cell carcinoma model was 98.82 % , ranking 3rd for the accuracy assessment ( see supplementary table 1 in supplementary file 3 ) .
these accuracy assessments for the cancerdiscover are better than the results provided by chipster .
data used in this paper were also analyzed independently in aliferis et al .
[ 21 ] , using two feature selection algorithms : recursive feature elimination and univariate association filtering .
these algorithms identified 6 and 100 features , respectively , as significant for cancer vs. normal classification , and 12 and 500 features , respectively , for adenocarcinoma vs. squamous cell carcinoma classification .
aliferis et al. reported average accuracies across classification algorithms : 94.97 % for cancer vs. normal model , and 96.83 % for the squamous carcinoma vs. adenocarcinoma model .
in comparison , cancerdiscover resulted in 99.21 % accuracy for cancer vs. normal model , and 99.06 % for the adenocarcinoma vs. squamous cell carcinoma model , while using only three features .
in the context of these data , cancerdiscover was more accurate , while using less information than that of aliferis et al. these results demonstrate that the cancerdiscover method is complementary to some of the existing methods , such as genepattern , chipster , and aliferis et al. methods , and that it is also suitable for accurate classification of other types of cancer types and subtypes .
although the classification accuracy of cancerdiscover was marginally higher than that of the compared methods , the strengths of cancerdiscover lie in its streamlined nature that enables users to begin with raw data and proceed to build machine learning models within a complete pipeline .
another strength of cancerdiscover is that it is flexible , allowing users to utilize various methodologies within the platform , and further extend the software as a whole due to its open - source nature .
in conclusion , we have developed a comprehensive , integrative , open - source , and freely available pipeline , cancerdiscover , which enables researchers to automate the processing and analysis of high - throughput data with the objective of both identifying cancer biomarkers and classifying cancer and normal tissue samples ( including cancer sub - types ) .
herein , we showcased the pipeline 's flexibility , utility , and ease - of - use in generating multiple prediction models simultaneously from raw high - throughput data .
cancerdiscover allows users to customize each step of the pipeline , preprocessing raw data , selecting normalization methods , data partitions , feature selection algorithms , and classification algorithms for additional analysis .
the cancerdiscover pipeline was able to identify an optimal number of top - ranked features and accurately classify the sample data into its classes .
benchmarking demonstrated the high performance of the pipeline across datasets of varying sizes .
researchers can now utilize cancerdiscover for diverse projects , including biomarker identification , and tissue classification without extensive technical knowledge while retaining significant flexibility .
another great advantage to the biomedical community is that unlike genepattern and chipster , cancerdiscover is open - source and freely available and written in a modular fashion which opens an array of opportunities for users to tweak the software themselves for their needs , adding more algorithms as it becomes available .
next , we will make our efforts to develop graphical user interface and web server for cancerdiscover with additional functionalities such as querying , searching and downloading datasets from the public repositories and data visualization of the outputs .
materials and methods the presented integrative pipeline consists of existing open - source software tools and utilizes publicly available datasets and various performance metrics .
data collection for the case study , lung cancer ( tumor vs. normal and adenocarcinoma vs. squamous carcinoma ) microarray gene expression data were collected from the broad institute cancer program legacy publication resources database [ 23 ] .
237 tumor tissue samples and 17 histologically normal tissue samples , and 211 lung adenocarcinoma and squamous cell carcinoma samples were used .
the plate used was human genome u95a oligonucleotide probe arrays , containing 12,625 probes .
benchmarking was performed using 500 samples of acute myeloid leukemia ( aml ) and normal blood sample expression data downloaded from ncbi ( gse6891 , gse2677 , gse43346 , gse63270 ) [ hg - u133 _ plus _ 2 ] human genome u133 plus 2.0 array , containing 54,675 probes .
normalization and background correction normalization and preprocessing are essential steps for the analysis of high - throughput data .
the affy r module 1.54 [ 24 ] from bioconductor package ( https :// bioconductor.org / packages / release / bioc / html / affy.html ) was used to remove the technical variation from noisy data and background noise from signal intensities .
this step is crucial for analyzing large amounts of data which have been compiled from different experimental settings where , individual data files are processed to remove sample bias from the data , which could otherwise introduce a bias in the model .
affy r package provides multiple methods for normalization and background correction , which can be utilized within cancerdiscover using programmatic flags .
for the case study given above , quantile normalization [ 25 ] and robust multichip average ( rma ) [ 20 ] were used for normalization and background correction , respectively .
machine learning algorithms and framework though the pipeline supports the diverse set of machine learning classifiers , we used support vector machines ( svms ) and random forests to construct the models for the case study .
these machine - learning methods were chosen because of their extensive and successful applications to datasets from genomic and proteomic domains [ 26 , 27 ] .
some of the cancer classification tasks were binary ( two classes ) , and the others were multiclass ( more than two classes ) .
though svms are designed for binary classification , they can also be used for multiclass classification by a one - versus - rest approach [ 28 ] .
the one - versus - rest approach for classification is known to be among the best - performing methods for multi - category classification for microarray gene expression data [ 29 ] .
models were also constructed using random forests ( rf ) , which can solve multi - category problems natively through a direct application [ 30 ] .
waikato environment for knowledge analysis ( weka 3 - 6 - 11 ) [ 18 ] is a machine learning software environment that serves as a platform for clustering and classification of high - throughput data .
performance measure accuracy was defined as the overall ability of models to predict testing data correctly .
reported measures included the numbers of true positives ( tp ) , true negatives ( tn ) , false positives ( fp ) , and false negatives ( fn ) .
a true - positive count is the number of samples in a dataset which were correctly categorized into classes .
a false - positive count is the number of samples in a dataset which were sorted into the wrong category .
a true negative count represents the number of samples which were not classified into a class to which they do not belong , and false negatives are samples which are not classified into the class to which they do belong .
accuracy , sensitivity ( or recall ) , specificity , precision , f1 - score are derived from the measures mentioned above as follows : accuracy is the ratio of correctly predicted samples to the total number of samples .
sensitivity is the proportion of true positives that are predicted as positives .
specificity is the proportion of true negatives which are predicted as negatives , and precision is the ratio of true positives to the total number of true negatives and true positives .
lastly , f1 - score is defined as the harmonic mean of precision and recall and is calculated by first multiplying precision and recall values , then dividing the resulting value by the total of precision and recall , and finally , multiplying the result by two .
the accuracy , sensitivity , specificity , precision , and f1 - score are given by : accuracy = tp + tntp + tn + fp + fnrecall / sensitivity = tptp + fnprecision = tptp + fpspecificity = tntn + fpf1 - score = 2 * precision * recallprecision + recall model selection and accuracy estimation the pipeline offers the flexibility to choose any k - fold cross - validation for model selection and accuracy estimation .
in the case study , we used stratified 10 - fold cross - validation [ 27 , 29 ] .
this technique separates data into ten parts and uses nine parts for the model generation while predictions are generated and evaluated by using the one part .
this step is subsequently repeated ten times , such that each part ( internal test set ) is tested against the other nine parts ( internal train set ) .
after the 10 - fold cross - validation , the average performance of all of the folds is used as an unbiased estimate of the performance of model training .
supplementary materials tables author contributions am designed the software pipeline .
am and gb wrote the software , developed the case study , and wrote the manuscript .
th , ja , and am conceptualized the project , reviewed , and revised the manuscript .
we would like to thank lara appleby and achilles gasper rasquinha for the critical review of this manuscript .
we would also like to acknowledge holland computing center at the university of nebraska - lincoln for providing high - performance computing clusters for machine learning modeling and benchmarking the pipeline .
conflicts of interest the authors declare that they have no conflicts of interest .
funding this work has been supported by the national institutes of health grant # [ 1r35gm119770 - 01 to th ] .
abbreviations hts high throughput sequencing hpc high performance computing slurm simple linux utility for resource management weka waikato environment for knowledge analysis ml machine learning svm support vector machine rf random forests rma robust multi average tp true positives tn true negatives fp false positives fn false negatives aml acute myeloid leukemia arff attribute relation file format .
references 1 saeys y inza i larranaga p a review of feature selection techniques in bioinformatics bioinformatics 2007 23 2507 17 https :// doi.org / 10.1093 / bioinformatics / btm344 17720704 2 sanborn jz benz sc craft b szeto c kober km meyer l vaske cj goldman m smith ke kuhn rm karolchik d kent wj stuart jm the ucsc cancer genomics browser : update 2011 nucleic acids res 2011 39 d951 9 https :// doi.org / 10.1093 / nar / gkq1113 21059681 3 mateo l guitart - pla o pons c duran - frigola m mosca r aloy p a panoromic view of personal cancer genomes nucleic acids res 2017 45 w195 200 https :// doi.org / 10.1093 / nar / gkx311 28453651 4 tang z li c kang b gao g li c zhang z gepia : a web server for cancer and normal gene expression profiling and interactive analyses nucleic acids res oxford university press 2017 45 w98 102 https :// doi.org / 10.1093 / nar / gkx247 28407145 5 cases i pisano dg andres e carro a fernandez jm gomez - lopez g rodriguez jm vera jf valencia a rojas am cargo : a web portal to integrate customized biological information nucleic acids res 2007 35 w16 20 https :// doi.org / 10.1093 / nar / gkm280 17483515 6 dietmann s lee w wong p rodchenkov i antonov av ccancer : a bird 's eye view on gene lists reported in cancer - related studies nucleic acids res 2010 38 w118 23 https :// doi.org / 10.1093 / nar / gkq515 20529879 7 shepherd r forbes sa beare d bamford s cole cg ward s bindal n gunasekaran p jia m kok cy leung k menzies a butler ap data mining using the catalogue of somatic mutations in cancer biomart database 2011 2011 bar018 bar018 https :// doi.org / 10.1093 / database / bar018 21609966 8 culhane ac schroder ms sultana r picard sc martinelli en kelly c haibe - kains b kapushesky m st pierre aa flahive w picard kc gusenleitner d papenhausen g genesigdb : a manually curated database and resource for analysis of gene expression signatures nucleic acids res 2012 40 d1060 6 https :// doi.org / 10.1093 / nar / gkr901 22110038 9 rhodes dr kalyana - sundaram s mahavisno v varambally r yu j briggs bb barrette tr anstet mj kincead - beal c kulkarni p varambally s ghosh d chinnaiyan am oncomine 3.0 : genes , pathways , and networks in a collection of 18,000 cancer gene expression profiles 1 neoplasia 2007 9 166 80 https :// doi.org / 10.1593 / neo.07112 17356713 10 zuo y cui y di poto c varghese rs yu g li r ressom hw indeed : integrated differential expression and differential network analysis of omic data for biomarker discovery methods 2016 111 12 20 https :// doi.org / 10.1016 / j.ymeth.2016.08.015 27592383 11 gao j aksoy bb dogrusoz u dresdner g gross b sumer so sun y jacobsen a sinha r larsson e cerami e sander c schultz n integrative analysis of complex cancer genomics and clinical profiles using the cbioportal sci signal 2013 6 l1 https :// doi.org / 10.1126 / scisignal.2004088 12 kallio ma tuimala jt hupponen t klemela p gentile m scheinin i koski m kaki j korpelainen ei chipster : user - friendly analysis software for microarray and other high - throughput data bmc genomics 2011 12 507 https :// doi.org / 10.1186 / 1471 - 2164 - 12 - 507 21999641 13 reich m liefeld t gould j lerner j tamayo p mesirov jp genepattern 2.0 .
nat genet 2006 38 500 1 https :// doi.org / 10.1038 / ng0506 - 500 14 agrawal u soria d wagner c cancer subtype identification pipeline : a classifusion approach 2016 ieee congress on evolutionary computation ( cec ) ieee 2016 2858 65 https :// doi.org / 10.1109 / cec.2016.7744150 15 huang hl chang fl esvm : evolutionary support vector machine for automatic feature selection and classification of microarray data biosystems 2007 90 516 28 https :// doi.org / 10.1016 / j.biosystems.2006.12.003 17280775 16 medina i montaner d tarraga j dopazo j prophet , a web - based tool for class prediction using microarray data bioinformatics 2007 23 390 1 https :// doi.org / 10.1093 / bioinformatics / btl602 17138587 17 mohammed a biegert g adamec j helikar t identification of potential tissue - specific cancer biomarkers and development of cancer versus normal genomic classifiers oncotarget 2017 8 85692 85715 https :// doi.org / 10.18632 / oncotarget.21127 29156751 18 hall m frank e holmes g pfahringer b reutemann p witten ih the weka data mining software sigkdd explor newsl 2009 11 10 https :// doi.org / 10.1145 / 1656274.1656278 19 bolstad bm irizarry ra astrand m speed tp a comparison of normalization methods for high density oligonucleotide array data based on variance and bias bioinformatics 2003 19 185 available from http :// www.stat.berkeley.edu /~ bolstad / normalize / 12538238 20 irizarry ra hobbs b collin f beazer - barclay yd antonellis kj scherf u speed tp exploration , normalization , and summaries of high density oligonucleotide array probe level data biostatistics 2003 4 249 64 https :// doi.org / 10.1093 / biostatistics / 4.2.249 12925520 21 aliferis cf tsamardinos i massion pp statnikov a fananapazir n hardin d machine learning models for classification of lung cancer and selection of genomic markers using array gene expression data am assoc artifical intell 2003 67 71 22 koschmieder a zimmermann k trissl s stoltmann t leser u tools for managing and analyzing microarray data br bioinform 2012 13 46 60 https :// doi.org / 10.1093 / bib / bbr010 23 cancer program legacy publication resourcesdata identifier : classification of human lung carcinomas by mrna expression profiling reveals distinct adenocarcinoma sub - classesavailable from http :// portals.broadinstitute.org / cgi - bin / cancer / datasets.cgi 24 gautier l cope l bolstad bm irizarry ra affy - - analysis of affymetrix genechip data at the probe level bioinformatics 2004 20 307 15 https :// doi.org / 10.1093 / bioinformatics / btg405 14960456 25 bolstad b probe level quantile normalization of high density oligonucleotide array data cell 2001 1 8 26 statnikov a wang l aliferis c a comprehensive comparison of random forests and support vector machines for microarray - based cancer classification bmc bioinformatics 2008 9 319 https :// doi.org / 10.1186 / 1471 - 2105 - 9 - 319 18647401 27 mohammed a guda c application of a hierarchical enzyme classification method reveals the role of gut microbiome in human metabolism bmc genomics 2015 16 s16 https :// doi.org / 10.1186 / 1471 - 2164 - 16 - s7 - s16 26099921 28 cortes c vapnik v support - vector networks mach learn 1995 20 273 97 https :// doi.org / 10.1007 / bf00994018 29 statnikov a aliferis cf tsamardinos i hardin d levy s a comprehensive evaluation of multicategory classification methods for microarray gene expression cancer diagnosis bioinformatics 2005 21 631 43 https :// doi.org / 10.1093 / bioinformatics / bti033 15374862 30 bishop cm pattern recognition and machine learning jordan m kleinberg j scholkopf b book .
springer 2007 738 https :// doi.org / 10.1117 / 1.2819119