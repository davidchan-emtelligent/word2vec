scientificworldjournal scientificworldjournal tswj the scientific world journal 2356 - 6140 1537 - 744x hindawi publishing corporation 25215330 4158119 10.1155 / 2014 / 727658 research article a novel adaptive cuckoo search for optimal query plan generation gomathi ramalingam 1 * sharmila dhandapani 2 1department of computer science and engineering , bannari amman institute of technology , sathyamangalam 638401 , india 2department of electronics and instrumentation engineering , bannari amman institute of technology , sathyamangalam 638401 , india * ramalingam gomathi : gomsbk @ gmail.com academic editor : juan pavon 2014 14 8 2014 2014 727658 4 6 2014 10 7 2014 17 7 2014 copyright ( c ) 2014 r. gomathi and d. sharmila .
2014 this is an open access article distributed under the creative commons attribution license , which permits unrestricted use , distribution , and reproduction in any medium , provided the original work is properly cited .
the emergence of multiple web pages day by day leads to the development of the semantic web technology .
a world wide web consortium ( w3c ) standard for storing semantic web data is the resource description framework ( rdf ) .
to enhance the efficiency in the execution time for querying large rdf graphs , the evolving metaheuristic algorithms become an alternate to the traditional query optimization methods .
this paper focuses on the problem of query optimization of semantic web data .
an efficient algorithm called adaptive cuckoo search ( acs ) for querying and generating optimal query plan for large rdf graphs is designed in this research .
experiments were conducted on different datasets with varying number of predicates .
the experimental results have exposed that the proposed approach has provided significant results in terms of query execution time .
the extent to which the algorithm is efficient is tested and the results are documented .
1. introduction today , most of the data we require is available to us in the form of web pages .
the web pages contain documents which are linked with each other .
humans can easily read these web pages , but the machine has difficulty in understanding the meaning of the web pages .
this leads to the emergence of the semantic web .
many data models exist for storing the semantic web data .
one of the fundamental data models is the rdf .
it is a language for representing semantic web data .
each statement in rdf is represented using a set of triples which contains subject , predicate , and object .
three types of elements can be defined in rdf : resources represented by uri and blank nodes and literals represented by data values .
a subject in a triple can be either a resource or a blank node .
an object can be any element but predicate can be only a resource .
for example , consider three infinite sets r , b , and d called resources , blank nodes , and literals .
an rdf triple ( subject , predicate , and object ) is an element of ( r union b ) x r x ( r union b union d ) .
an rdf graph is a set of rdf triples .
to query rdf , several query languages exist .
the most popular of them is the sparql protocol and rdf query language ( sparql ) .
a sparql can query rdf datasets from many data sources .
it can match both basic and complex graph patterns from multiple sources and can also filter the results using filter expressions .
different types of queries exist in sparql .
but we use only select queries with one or more where clauses in the research .
an encouraging research area in this perspective is the determination of optimal query paths .
a query path refers to the order in which different parts of a query is executed .
the query execution time is directly related with the query path .
an efficient algorithm for finding an optimal query path can thus contribute to quick and efficient querying mechanism .
in the semantic web 's perspective , some research has been done already in this area .
algorithms like [ 1 ] iterative improvement ( ii ) algorithm , simulated annealing ( sa ) also called two - phase optimization ( 2po ) algorithm , and genetic algorithm ( ga ) were used to address the problem of query path optimization .
traditional query optimization algorithms exist but as an alternative ; there exist the soft computing techniques for optimizing the queries .
a metaheuristic algorithm is an iterative generation process which combines different concepts for exploring the search space and finds near - optimal solutions .
these algorithms are approximate and usually nondeterministic .
metaheuristic algorithms are best suitable for np - hard optimization problems .
they give better quality solutions than heuristic methods .
query optimization is an np - hard problem .
as an alternate to the traditional optimization methods , we can optimize the query by using metaheuristic algorithms which are the best choice for solving np - hard problems .
the paper is organized as follows .
section 2 describes the literature review of work done in the related area .
section 3 explains the original cuckoo search algorithm .
section 4 defines the solution space , encoding methodology , and the fitness function for the problem of query optimization .
section 5 outlines the implementation of adaptive cuckoo search algorithm to determine the optimal query paths .
section 6 summarizes the datasets and the experimental results .
section 7 sketches the conclusion .
2. related work the fundamental concepts related to efficient processing [ 2 ] of sparql query language were studied in the literature .
a total complexity analysis for all operator fragments of the sparql query language was considered .
methods were designed for semantic optimization of sparql queries .
the main idea behind semantic query optimization was , given a query and a set of integrity constraints , to find minimal ( or more efficient ) queries that are equivalent to the original query on each database instance that satisfies the constraints .
semantic web data management needs efficient querying of large scale rdf triples .
to determine the optimal query plan , a main - tree - shaped algorithm [ 3 ] was proposed in the literature which collects a set of rdf statistics for estimating the cost of the query plan .
the first step of the algorithm converts every node into the execution subtree and the second step enumerates all the execution trees by treating each node as the root node and then choosing the tree with the minimum execution cost as the optimal execution plan .
experimental results have proved that the algorithm performs well for querying large scale rdf triples in terms of execution time .
a semantic query optimization approach [ 4 ] was designed to optimize query plans of heterogeneous multidatabase systems .
the approach provides global as well as local optimization for subqueries .
query plans are optimized by modifying subqueries using semantic knowledge about data .
the results of the approach demonstrate the savings in execution cost and the algorithm is more flexible and general compared to existing semantic query optimization methods .
a novel index structure , called all possible join tree ( apj - tree ) [ 5 ] , to reduce the searching space for the optimal execution plan of a set of map reduce jobs was proposed in the literature .
a cost model based rdf join processing solution using map reduce to minimize the query responding time was proposed .
to speed up join processing a hybrid join and bloom filter are employed .
the effectiveness of the cost model was proved in the experimental results performed .
today cloud computing technology can be used together with semantic web technology to solve many problems .
using this perception , an algorithm to generate the best possible query plan based on a cost model [ 6 ] was proposed in the literature .
an exhaustive approach to search for best query plan was presented which dynamically determines the number of jobs needed to complete a plan .
the results show that the framework is efficient and scalable to handle large number of rdf triples .
a block - oriented dynamic query plan generation approach using pipelined execution was designed .
the method consists of two phases , in which a near - optimal plan is chosen by identifying the processing [ 7 ] blocks of queries .
the second phase uses pipelining concept to generate the optimal plan .
optimization techniques , such as lightweight and fine - grained sideways information passing , semijoin , and other join processing optimizations , were incorporated to further enhance the performance of the query processing engine .
experiments were performed on three different datasets with over billion triples and the results show that the approach outperforms existing rdf query engines .
computing optimal distributed query plans is a complex problem since the number of possible query plans increases exponentially with respect to the number of relations accessed by the query and due to the increase in the number of sites in a distributed database .
to handle this problem , a new algorithm based on multiobjective genetic algorithm [ 8 ] was proposed in the literature .
the aim of this algorithm is to minimize the total processing cost of query processing .
experiments were performed and the observations show that the algorithm gives better performance and converges quickly towards optimal solutions .
the problem of query optimization [ 9 ] and the adaptation of genetic algorithm to the problem of query optimization were described .
four classes of genetic algorithms , that is , basic ga , constraint ga , and heuristic ga , and genetic local search algorithms were implemented and their performances were compared .
binary trees were encoded as chromosomes performing a lot of crossovers .
the simulation results proved that the genetic algorithm approach works better compared to traditional query optimization algorithms .
an approach to determine optimal query path [ 10 ] based on genetic algorithm was proposed in the literature .
query plans are represented using bushy trees and the trees are encoded using ordinal number encoding .
the performance of this algorithm was compared with two - phase optimization and it was proved that genetic algorithm outperforms the two - phase optimization in terms of solution quality , execution time needed , and consistency in performance .
the problem of database query optimization [ 11 ] and the adaptation of genetic algorithm to solve the problem were studied in the literature .
the algorithm uses a novel encoding scheme by using binary trees to perform crossover operation .
the important characteristic of the algorithm is its efficient parallelization .
the performance of the proposed algorithm was compared with other algorithms and the test results were documented .
to solve the problem of multijoin query ordering problem [ 12 ] which is a part of the query optimizer , an approach which combines the features of cuckoo and tabu search was proposed .
the experimental results prove the performance of the proposed algorithm in terms of execution time .
a novel metaheuristics approach [ 13 ] was proposed to find the global optimum of continuous global optimization problems with box constraints .
the characteristics of modern metaheuristics such as scatter search ( ss ) , genetic algorithms ( gas ) , and tabu search ( ts ) were used in the algorithm .
experiments proved that the approach was quite effective in identifying the global optimum solution to solve the general nonlinear optimization problem .
a new algorithm for solving the problem of multijoin query optimization [ 14 ] was designed based on ant colony optimization .
the algorithm interprets defining heuristic information , implementing local and global pheromone update , and designing state transition rule .
a reasonable solution is obtained after a repeated number of iterations .
the simulation results indicate that ant colony optimization was more effective and efficient compared to genetic algorithm .
to optimize rdf chain queries a new algorithm called rdf chain queries using a genetic algorithm ( rcq - ga ) [ 15 ] was devised in the literature to determine the order in which joins are performed efficiently .
a fitness function is defined assuming that the population contains n solutions .
ordinal number encoding is used for processing the bushy trees .
experimental results show that the algorithm outperforms other existing approaches in terms of solution quality .
to generate an optimal query plan for the problem of multijoin ordering query optimization problem , a sparql basic graph pattern ( bgp ) query optimization method [ 16 ] based on genetic algorithm was designed .
the method searches for the optimal query plan in a bushy tree space .
the results show that the method can lead to a comparable query performance with considerable optimization time .
3. cuckoo search algorithm nature inspired metaheuristic algorithms are successfully applied to find solutions for optimization problems .
they are characterized by algorithmic operators imitating computationally useful aspects of various natural events .
cuckoo search ( cs ) , bat algorithm , and firefly algorithm are examples of some of the nature inspired metaheuristic algorithms .
cuckoo search ( cs ) is an optimization technique developed [ 17 ] based on the brood parasitism of cuckoo species by laying their eggs in the nests of other host birds .
if a host bird discovers the eggs which are not their own , it will either throw these foreign eggs away or simply abandon its nest and build a new nest elsewhere .
this behavior is used in the cuckoo search algorithm .
each egg in a nest represents a solution , and a cuckoo egg represents a new solution .
the new solution ( cuckoo ) , if better , is replaced with the solution which is not so good in the nest .
in the simplest form of cuckoo search , each nest contains only one egg .
a new solution was generated by levy flight .
the rules for cs are described as follows .
each cuckoo lays one egg at a time and dumps it in a randomly chosen nest .
the best nests with high quality of eggs will carry over to the next generation .
the number of available host nests is fixed , and a host can discover a foreign egg with a probability p a in [ 0 , 1 ] .
in this case , the host bird can either throw the egg away or abandon the nest so as to build a completely new nest in a new location .
the pseudo code for cs is given in algorithm 1 .
while generating new solution x ( t + 1 ) for a cuckoo i , a levy flight is performed using the following : ( 1 ) xi ( t + 1 )= xi ( t )+ alpha (+) levy ( lambda ) .
the symbol (+) is an entry - wise multiplication .
basically levy flights provide a random walk while their random steps are drawn from a levy distribution for large steps as follows : ( 2 ) levy ~ u = t - lambda which has an infinite variance with an infinite mean .
here the consecutive jumps of a cuckoo essentially form a random walk process which obeys a power - law step - length distribution with a heavy tail .
4. proposed approach 4.1 .
rdf query paths the rdf representation of semantic web data can be queried using sparql protocol and rdf query language ( sparql ) .
each sparql query can be visualized using a query tree .
the leaf nodes of a query tree represent any of the triples and the internal nodes are used to join the triples .
there are different kinds of representation of query trees like bushy trees , left - deep trees , and right - deep trees .
the nodes of these query trees can be structured in many different ways to produce the same results .
the order in which operations are executed to retrieve the requested data is referred to as query plan or query path .
in this research left - deep trees [ 1 ] are used .
a left - deep tree is a class of join tree with join operators as inner nodes and relations as leaf nodes .
for example , figure 1 shows a left - deep tree which joins t1 , t2 , t3 , and t4 .
4.2 .
solution space in solution space , each solution represents a query execution plan .
the size of the solution depends on the type of tree we use for representing the query plan .
since we use left - deep query tree [ 1 ] , there are n !
possible ways to allocate n triples to the trees leaves .
the leaves of the tree consist of triples and the inner nodes consist of joining of these triples .
the n !
solutions can be obtained by applying the transformation rules like join commutativity , join associativity , left join exchange , and right join exchange .
4.3 .
encoding before any optimization algorithm is applied to solve a problem , a suitable encoding for the solution and a fitness function must be chosen .
for query optimization , the solutions are query plans represented using left - deep trees .
for encoding left - deep trees , we choose ordered list .
solutions are represented as an ordered list [ 1 ] of leaves .
for example , for the query plan tree ((( t1 infinity t2 ) infinity t3 ) infinity t4 ) is encoded as " 1234 " .
4.4 .
fitness function to determine rdf query path , let us decide on the fitness function .
in this research , the fitness function refers to the cost of the left - deep tree .
the cost of a left - deep tree depends on the selectivity and cardinality estimation .
consider r i to be the cardinality and f i,j to be the selectivity .
if p i,j is the join predicate between r i and r j , we can define ( 3 ) fi,j =| ri infinitypi,jrj || rixrj | .
for a given join tree t , the resultant cardinality | t | can be recursively computed as ( 4 ) | t |= | ri | if t is a leaf ri | t |=( piriint1,rjint2,fi,j )| t1 || t2 | if t = t1 infinity t2 .
for a given join tree t , the cost function c out is defined as ( 5 ) cout ( t )= 0 if t is a leaf ricout ( t )=| t |+ cout ( t1 )+ cout ( t2 ) , if t = t1 infinity t2 .
5. implementation 5.1 .
adaptive cuckoo search ( acs ) algorithm for determining optimal query path algorithm 2 is the steps of adaptive cuckoo search algorithm to solve the problem of query optimization .
to fine tune the convergence rate of cuckoo search algorithm , parameters like p a , lambda , and alpha can be modified .
the traditional cuckoo search algorithm uses fixed value for p a , and it cannot be changed dynamically .
for a fixed value of p a , it is not possible to find best solutions .
the main difference between original cuckoo search and the adaptive cuckoo search algorithm is the way in which we modify the value of p a. the value of p a should be decreased for solutions having fitness less than a threshold and increased for solutions having fitness greater than a threshold .
the threshold value is found out by sorting the initial solutions based on their fitness value and finding the median of fitness .
6. dataset description our evaluation is based on three different datasets , namely , leigh university benchmark ( lubm ) dataset , friend of a friend ( foaf ) dataset , and the central intelligence agency ( cia ) world factbook dataset .
the lubm benchmark is intended to evaluate the performance of those repositories with respect to extensional queries over a large data set that commits to a single realistic ontology .
it consists of university domain ontology , customizable and repeatable synthetic data , a set of test queries , and several performance metrics .
the dataset we use here is lubm5 which consists of about 645,649 triples .
the foaf consists of millions of rdf documents which describe attributes of people and relationships among them .
it consists of about 201,612 rdf triples .
the cia world factbook contains data about 250 countries defined using rdf statements .
information about government , people , transportation , and many more are provided by this dataset .
it consists of more than 100,000 rdf statements .
6.1 .
experimental results experiments are conducted in a microsoft windows xp environment on an intel pentium 4 machine with 2gb ram .
tests are conducted on considering 100,000 triples from each of the three different datasets lubm , foaf , and cia world factbook .
to determine the performance of the algorithm , several experiments are conducted with queries having varying number of predicates .
to increase the accuracy of the results , the optimization algorithm is iterated 100 times .
the acs algorithm is compared with the existing algorithms like genetic algorithm ( ga ) , particle swarm optimization ( pso ) , cs with simple random walk , and cs with levy flight .
the parameters and their values used in the proposed algorithm are given in table 1 .
figures 2 , 3 , and 4 are the fitness charts obtained for the above parameter settings for three different datasets .
the proposed method takes the query cost as fitness function and it is evaluated for 50 to 500 generations to get the optimum cost. from the observations the query cost is decreased gradually when the number of generations increased .
adaptive cuckoo search algorithm gives optimum results compared with other existing optimization algorithms as shown in figures 2 , 3 , and 4 .
the average execution time is recorded for varying number of predicates and the results are shown .
figures 5 , 6 , and 7 show the average execution times of the proposed method compared with pso , ga , cs with simple random walk , and cs with levy flight .
execution time linearly increases when the number of predicates is increased in all the five methods .
acs method gives better execution time when compared with other methods because of its less complexity and simple method to find the optimum solution .
in particle swarm optimization , the personal best and global best particles are maintained and updated in every iteration and also fitness values are calculated for all new particles generated .
so it takes more time to execute to find the optimum results .
genetic algorithm has also several operators like selection , crossover , and mutation which increase the execution time .
in adaptive cuckoo search , number of nests taken is varying from 50 to 500 and the probability of abandoned nest is chosen randomly .
because of less number of populations and the best breeding behavior of cuckoo species , the proposed algorithm gives optimum results in minimum time compared with other algorithms .
7. conclusions in this work , we have presented a novel adaptive cuckoo search algorithm for the problem of query optimization .
the algorithm starts with a solution space consisting of all possible query plans .
the fitness function for the algorithm is the cardinality of the triples occurring in the dataset based on the cost model .
the cost of the different query plans depends on the order of joins .
the experimental results prove the efficiency of the algorithm .
the algorithm has been applied and tested with datasets of varying sizes and the best query plan is generated based on the fitness function .
the query execution time is also recorded for diverse dataset sizes .
to improve the accuracy of the work , cuckoo search algorithm can be hybrid with other swarm algorithms in the future and performance can be improved .
conflict of interests the authors declare that there is no conflict of interests regarding the publication of this paper .
1 steinbrunn m moerkotte g kemper a heuristic and randomized optimization for the join ordering problem the vldb journal 1997 6 3 191 208 2 - s2.0 - 0001443955 2 schmidt m meier m lausen g foundations of sparql query optimization proceedings of the 13th international conference on database theory ( icdt ' 10 ) march 2010lausanne , switzerland 4 33 2 - s2.0 - 77954493935 3 liu c wang h yu y xu l towards efficient sparql query processing on rdf data tsinghua science and technology 2010 15 6 613 622 2 - s2.0 - 78649806879 4 hsu c - n knoblock ca semantic query optimization for query plans of heterogeneous multidatabase systems ieee transactions on knowledge and data engineering 2000 12 6 959 978 2 - s2.0 - 0034313965 5 zhang x chen l wang m towards efficient join processing over large rdf graph using mapreduce scientific and statistical database management 2012 7338 250 259 lecture notes in computer science 6 husain mf khany l kantarciogluz m thuraisingham b data intensive query processing for large rdf graphs using cloud computing tools proceedings of the 3rd ieee international conference on cloud computing ( cloud ' 10 ) july 2010miami , fla , usa 1 10 2 - s2.0 - 77957970762 7 yuan p xie c jin h liu l yang g shi x dynamic and fast processing of queries on large - scale rdf data knowledge and information systems 2014 8 shina panicker tv kumar v distributed query plan generation using multiobjective genetic algorithm the scientific world journal 2014 2014 17 pages 628471 9 dong h liang y genetic algorithms for large join query optimization proceedings of the 9th annual genetic and evolutionary computation conference ( gecco ' 07 ) july 2007london , uk 1211 1218 2 - s2.0 - 34548092149 10 hogenboom a milea v frasincar f kaymak u genetic algorithms for rdf query path optimization proceedings of the 1st international workshop on nature inspired reasoning for the semantic web2008 16 30 11 horng jt kao cy liu bj a genetic algorithm for database query optimization 1 proceedings of the 1st ieee conference on evolutionary computationjune 1994orlando , fla , usa 350 355 2 - s2.0 - 0028553353 12 joshi m srivastava pr query optimization : an intelligent hybrid approach using cuckoo and tabu search international journal of intelligent information technologies 2013 9 1 40 55 2 - s2.0 - 84877904561 13 trafalis tb kasap s a novel metaheuristics approach for continuous global optimization journal of global optimization 2002 23 2 171 190 mr1909416 14 li n liu y dong y gu j application of ant colony optimization algorithm to multi - join query optimization proceedings of the 3rd international symposium on advances in computation and intelligence2008 189 197 15 hogenboom a milea v frasincar f kaymak u rcq - ga : rdf chain query optimization using genetic algorithms e - commerce and web technologies 2009 5692 181 192 lecture notes in computer science 16 ouyang d wang x ye y cui x a ga - based sparql bgp reordering optimization method advances in information sciences and service sciences 2012 4 9 139 147 2 - s2.0 - 84861906011 17 yang x deb s cuckoo search via levy flights proceedings of the world congress on nature and biologically inspired computing ( nabic ' 09 ) december 2009coimbatore , india ieee publications 210 214 2 - s2.0 - 77949623076 figure 1 left - deep trees .
figure 2 evolution of best fitness for lubm dataset .
figure 3 evolution of best fitness for foaf dataset .
figure 4 evolution of best fitness for cia world factbook dataset .
figure 5 average execution times ( lubm dataset ) .
figure 6 average execution times ( foaf dataset ) .
figure 7 average execution times ( cia world factbook dataset ) .
algorithm 1 pseudocode for cuckoo search .
algorithm 2 table 1 parameters and their values for adaptive cuckoo search algorithm .
parameter value adaptive cuckoo search ( acs ) number of nests 50 - 500 number of iterations 100 p a 0 - 1 alpha 1 lambda 1.5 number of predicates 2 - 20