bmc bioinformatics bmc bioinformatics 1471 - 2105 biomed central london 17217516 1780124 1471 - 2105 - 7 - s4 - s23 10.1186 / 1471 - 2105 - 7 - s4 - s23 research systematic gene function prediction from gene expression data by using a fuzzy nearest - cluster method li xiao - li 1 xlli @ i2r.a - star.edu.sg tan yin - chet 1 yctan @ i2r.a - star.edu.sg ng see - kiong 1 skng @ i2r.a - star.edu.sg 1 knowledge discovery department , institute for infocomm research , 21 heng mui keng terrace , singapore 119613 , singapore 2006 12 12 2006 7 suppl 4 symposium of computations in bioinformatics and bioscience ( scbb06 ) youping deng , jun nihttp :// www.biomedcentral.com / content / pdf / 1471 - 2105 - 7 - s4 - info.pdf s23 s23 copyright ( c ) 2006 li et al ; licensee biomed central ltd 2006 li et al ; licensee biomed central ltd this is an open access article distributed under the terms of the creative commons attribution license () , which permits unrestricted use , distribution , and reproduction in any medium , provided the original work is properly cited .
background quantitative simultaneous monitoring of the expression levels of thousands of genes under various experimental conditions is now possible using microarray experiments .
however , there are still gaps toward whole - genome functional annotation of genes using the gene expression data .
results in this paper , we propose a novel technique called fuzzy nearest clusters for genome - wide functional annotation of unclassified genes .
the technique consists of two steps : an initial hierarchical clustering step to detect homogeneous co - expressed gene subgroups or clusters in each possibly heterogeneous functional class ; followed by a classification step to predict the functional roles of the unclassified genes based on their corresponding similarities to the detected functional clusters .
conclusion our experimental results with yeast gene expression data showed that the proposed method can accurately predict the genes' functions , even those with multiple functional roles , and the prediction performance is most independent of the underlying heterogeneity of the complex functional classes , as compared to the other conventional gene function prediction approaches .
june 20 - 24 2006symposium of computations in bioinformatics and bioscience ( scbb06 ) in conjunction with the international multi - symposiums on computer and computational sciences 2006 ( imsccs | 06 ) hangzhou , china background recent emergence of various high throughput tools has supplied new and powerful means for biologists to experimentally interrogate living systems at the systems level instead of merely at the molecular level .
large - scale experiments that could only be imagined a few decades ago can now be performed routinely .
in particular , the advent of dna microarray technologies has enabled the differential expressions of thousands of genes under various experimental conditions to be monitored simultaneously and quantitatively .
analysis of such genome - wide gene expression data is useful for elucidating the functional relationships among genes in the genomes .
to systematically reveal the biological functional roles of the genes in a genome , the gene expression profiles of a series of experimental assays or conditions can be grouped into clusters based on the similarity in their patterns of expression .
the co - expressed genes in each cluster can then be inferred to be coding for proteins that partake in a common biological function .
the functions of unknown gene products can also be inferred using the guilt - by - association principle [ 1 ] .
there are two typical techniques that can be used on gene expression data for gene function annotation or prediction .
the first technique is clustering ( a form of unsupervised learning ) , while the second is classification ( a form of supervised learning ) [ 2 ] .
in clustering , the data points ( e.g. genes ) are unlabeled - in other words , we assume no prior knowledge about any of the genes' biological functions .
using the expectation that genes which perform a common biological function would have expression profiles that exhibit a similar pattern across different experimental conditions , the clustering process organizes genes into different functional groups using a similarity ( or distance ) measure on the gene expression data .
numerous clustering techniques [ 3 ] have been proposed to find groups of co - expressed genes .
these techniques include hierarchical clustering [ 4 ] , self - organizing maps [ 5 ] , k - means clustering [ 6 ] , simulated annealing [ 7 ] , graph - theoretic clustering [ 8 ] , mutual information approach [ 9 ] , fuzzy c - means clustering [ 10 ] , diametrical clustering [ 11 ] , quantum clustering with singular value decomposition [ 12 ] , bagged clustering [ 13 ] and click [ 14 ] .
clustering techniques are useful when there is no prior knowledge ( i.e. functional labels for the genes ) available .
however , this may not be a particularly common situation here as biologists typically already know a subset of genes involved in a biological pathway of interest .
instead of clustering , we can treat the function prediction problem as a classification task so that such prior information can be exploited in the form of training sets for supervised machine learning algorithms .
several classification methods have been proposed , including nearest neighbor classification [ 15 ] , support vector machines [ 16 ] and neural networks [ 17 ] .
however , as cellular functions are naturally complex , a combination of heterogeneous biological activities is typically required to perform each biological function .
this means that not all the genes in a given functional class behave homogeneously , and this can drastically affect the learning rates of classification methods [ 17 ] .
in this paper , we therefore adopt a combined approach of unsupervised clustering followed by supervised classification for assigning biological functions to the unknown genes .
first , we perform hierarchical clustering to find co - expressed subgroups or clusters of genes within each putative heterogeneous functional class .
after that , given a test gene , we predict its functional classes by computing the similarity of its expression profile to each of its nearest functional clusters - these similarity values can be considered as fuzzy membership values that represent the degree to which the test gene belongs to the corresponding functional classes ( where each class is a fuzzy set ) .
the function labels of those clusters with maximal similarities can then be assigned to the test gene as its predicted functions .
we call this approach the fuzzy nearest - cluster method ( fnc ) and we will show in this paper that it is particularly useful for genome - wide systematic functional prediction of genes from microarray expression data , because it takes into account the heterogeneity present even within each functional class .
methods in this section , we provide the details of our proposed technique fuzzy nearest - cluster ( fnc ) , which utilizes the advantages of both clustering and classification by ( i ) capturing the homogeneous gene subgroups within heterogeneous function classes through clustering ; and ( ii ) using the experimentally - determined function information , i.e. prior biological knowledge for classification .
our method fnc consists of two steps .
section ' mining for co - expressed gene subgroups with hierarchical clustering ' presents the first step - a hierarchical clustering algorithm that finds , within each functional class , the subgroups of genes that are co - expressed .
then , a classification step is described in section ' predicting the functions of unclassified genes' to predict the functional classes of unclassified genes based on the functional similarities .
finally , section ' determining the thresholds lambda and k ' presents how to automatically set the parameters used in the two steps above .
mining for co - expressed gene subgroups with hierarchical clustering biological functions are complex processes ; it is therefore unrealistic to expect that all the genes in a functional class would be expressed in a homogeneous fashion .
figure 1 shows an example of the high degree of heterogeneity amongst the genes in the functional class " c - compound and carbohydrate metabolism " .
it is thus desirable to capture the homogeneous gene subgroups within each functional class , where the genes within each subgroup have a maximal level of similarity in their expression ( see figure 2 ) that is in turn suitable for classification training .
in this paper , we therefore pre - characterize each functional class by performing hierarchical clustering to group the genes within a given functional class into homogeneously co - expressed subgroups .
agglomerative hierarchical clustering ( hc ) is an iterative procedure whereby the most similar genes are grouped together during each step to form progressively larger and larger clusters of genes .
compared with k - means clustering where the number of clusters must be pre - determined by a parameter k , the number of sub - clusters need not be pre - determined here ( although hc typically clusters all the genes into one big cluster after the procedure is complete ) .
it is therefore suitable for our application as it is not possible to pre - determine the number of subgroups in a heterogeneous functional class .
there are several approaches for agglomerative hc. in the average group linkage method , the distance ( or inversely , similarity ) between two clusters is defined in terms of the average vectors of each cluster , i.e. two vectors are involved .
other methods include average linkage ( distance is average of pair - wise distances between all items within two clusters ) , single linkage ( minimum of all pair - wise distances ) , and complete linkage ( maximum of all pair - wise distances ) .
our fnc method employs a variant of average group linkage .
we chose the average group linkage method ( also used in [ 4 ]) for its computational efficiency as well as its robustness against the noisiness of gene expression microarray data .
single linkage and complete linkage are relatively much more susceptible to noise as they take only a single distance ( either minimum or maximum ) into account when comparing clusters .
our variant of average group linkage produces a number of clusters instead one single cluster .
we introduce a threshold lambda to stop the clustering procedure when even the most similar or closest clusters have a similarity less than lambda .
algorithm 1 details our clustering algorithm for mining co - expressed subgroups within a functional class .
for each function fi in the function set f , our algorithm 1 clusters the genes within the functional group fi into co - expressed subgroups .
in the algorithm , steps 3 to 6 construct a gene set gi for function fi and compute the corresponding similarity values between each pair of genes in the gene set gi. here , the pearson correlation is used as the similarity measure .
in step 7 , each gene in the gi is set as an initial individual cluster to construct cluster ci. step 8 then finds the two most similar clusters from ci. steps 9 to 15 comprise the merging loop to group the two most similar clusters into a new cluster cik ( step 10 ) if the similarity value is greater than the threshold lambda .
step 11 then calculates the new expression profile for cluster cik .
steps 12 and 13 add the new cluster while removing the two underlying clusters from ci respectively .
finally , step 14 finds the two most similar clusters in the updated cluster set ci to prepare for the next iteration .
when the algorithm terminates , for each gene function fi , the algorithm outputs a cluster set ci where the similarity between each pair of clusters in ci is less than lambda .
it is important to note that while genes were clustered together regardless of their biological functions in the related clustering works mentioned in the introduction , we cluster here only the genes within each of the functional classes .
thus , we are able to make use of existing biological knowledge and avoid the potential problem of generating gene expression clusters do not correspond to the true biological functional classes .
input : training gene set g and function set f output : cluster set ci for each function fi 1 : begin 2 : for each function fiinf do 3 : construct gene set gi = { g | fun ( g ) = fi , ging } ; 4 : for each pair of gene ( ga , gb ) , gaingi , gbingi , a != b , do 5 : compute the similarity sim ( ga , gb ) ; 6 : end for 7 : initialize cluster set ci = { cij | cij = { gj } , gjingi , j = 1 , 2 , . .
. , | gi |} ; 8 : find the two clusters cim and cin with maximal similarity , ( cim , cin ) = arg sim ( cia , cib ) , cia , cibinci ; 9 : while ( sim ( cim , cin ) >= lambda ) do 10 : combine cim and cin into a bigger cluster cik ; 11 : calculate the expression profile for cik by averaging the gene profiles of cim and cin ; 12 : ci = ci union { cik } ; 13 : ci = ci - { cim } - { cin } ; 14 : find the two new clusters cim and cin with maximal similarity in updated cluster set ci , cim , cin in ci ; 15 : end while 16 : end for 17 : end algorithm 1 .
mining of co - expressed subgroups within each function predicting the functions of unclassified genes next , based on the gene subgroups in each of the functional classes , we can predict the functions of unclassified genes by using their nearest clusters' functional information .
the underlying rationale is that co - expressed genes are likely to share the same biological functions ( the " guilt - by - association " principle ) .
given an unknown gene gt , for each function fi , we compute the functional similarity value between gt and fi. the gene gt is then assigned with functions having the largest similarity values .
the function similarity value between gt and fi is computed as follows .
first , we compute the pearson similarity between gt and each cluster in function fi. the clusters that have the top k biggest pearson similarity values are then selected as prototype clusters .
the functional similarity between gt and fi is then defined as the average pearson similarity value of the prototype clusters .
the detailed steps are shown in algorithm 2 .
in algorithm 2 , we predict the functions for each unclassified gene gt in the test set t based on its similarity scores ( also interpreted as a fuzzy membership value ) with the clusters of the known functions .
step 4 of the algorithm computes the cluster similarity between a test gene gt and each cluster cij in cluster set ci of function fi. steps 5 to 6 then obtain a subset ctop of ci consisting of k nearest prototype clusters .
step 7 computes the average cluster similarities fsi .
finally , steps 9 and 10 rank the fsi and assign the test gene gt with the functions that have the top fsi values ( see our evaluation metric tna in section 3.1.3 ) .
input : test gene set t , cluster set ci for each function fi output : gene 's predicted functions 1 : begin 2 : for each test gene gtint do 3 : for each function fiinf do 4 : compute the cluster similarity ss ( gt , cij ) between the test gene gt and each cluster cij in cluster set ci ; 5 : suppose cluster cik is the cluster whose cluster similarity is k - th largest in cluster set ci ; 6 : ctop = { cij | ss ( gt , cij ) >= ss ( gt , cik ) , cijinci , j = 1 , 2 , . .
. , | ci |} ; 7 : 8 : end for 9 : rank fsi , i = 1 , 2 , . .
. , | f | ; 10 : assign the functions with the top fsi to gene gt ; 11 : end for 12 : end algorithm 2 .
a fuzzy k - nearest clusters algorithm for functional prediction .
given a test gene , the functions with maximal functional similarities will be assigned to it. the average cluster similarity fsi basically evaluates how similar a test gene is to a function , indicating a fuzzy membership value with respect to each function .
the sum of fuzzy membership values for any particular test gene need not be 1 , since these are not probability values .
also , because genes are typically involved in multiple cellular processes , each gene can have partial membership in more than one functional class ( fuzzy set ) .
determining the thresholds lambda and k there were two parameters , lambda and k , used in the two steps presented in the previous sections .
lambda is a parameter for the clustering process , while k is a parameter for the classification step .
parameter lambda determines when we should stop the clustering process ; its value directly affects the " quality " of the clusters output by the clustering step .
parameter k controls how many similar neighboring clusters to be used in the classification step for predicting the function labels for a given gene ; it therefore affects the classification performance .
conventionally , clustering and classification methods require the parameters to be " user - defined " ; they therefore fall short for not providing a systematic way to determine the values for these key parameters that directly affect system performance .
here , we show how we can quantitatively determine the threshold values for these two parameters by minimizing the estimated error rate based on the known genes' function labels .
we use different values of lambda from 0.7 to 1.0 ( in steps of 0.05 ) while varying k from 1 to 20 ( with step 1.00 ) .
for each combination of lambda and k values , we compute the estimated error rate for all the genes in training set g - by counting the number of genes' predicted functions f ( gi , lambda , k ) that were not equal to its actual functions l ( gi ) .
the threshold values of lambda and k can then be obtained from the ( lambda ' , k ') that gave the minimum error on g : results gene function prediction is a multi - class classification problem since genes typically play multiple roles biologically .
given an unclassified gene and multiple possible functional classes c = { c1 , c2 ,... , cn } , our program needs to decide the most likely n classes for the unknown gene ; the predictions can then be given to biologists for experimental validation .
as such , we face a more challenging classification problem than typical binary classification that only needs to determine whether a gene belongs to a particular functional class or not .
experimental setup for evaluation , we compare our proposed fnc method with two widely adopted methods , i.e. support vector machines [ 18 ] and k nearest neighbors [ 15 ] .
for each of the classification methods in our evaluation , we perform 5 randomly - seeded runs of 5 - fold cross - validation .
data set we use a composite dataset from six different experimental studies described in [ 19,20 ] and [ 21 ] .
each study 's dataset consists of gene expression levels of the entire yeast genome under various experimental conditions ( see table 1 ) .
together , they form a composite dataset comprising the gene expression levels of 6221 genes under 80 different conditions .
we represent the data as a matrix of 6221 rows and 80 columns .
the composite dataset can be obtained from eisen 's lab [ 4 ] at . note that there are many missing values in the original 6221 - by - 80 data as some gene expression values were not obtained under certain conditions in the studies due to experimental limitations or irregularities .
we further refine the dataset by filtering out those rows ( genes ) with more than 20 missing values , resulting in a reduction of classifiable genes to 5775 .
some of these genes may still have missing expression values .
although there are various involved methods for filling in or predicting missing values [ 22 ] , we simply fill in the missing values with zeroes here without loss of generality .
mips functional annotation in our study , we use the mips comprehensive yeast genome database ( cygd ) [ 23 ] as the source of function annotations .
mips uses a numeric , hierarchical system to denote the various classes of biological functions .
in this work , we use a functional granularity up to mips level 2 .
we then keep only those functional classes that contained at least ten genes so that there are sufficient training data for each function .
in all , 48 mips functional classes were selected classifying the 5775 yeast genes using the 80 - column datasets .
evaluation metric we introduce here a new evaluation metric called the " top n accuracy " ( tna ) .
for each given gene , the tna metric requires a prediction algorithm to produce a ranked ordering of all putative functional categories ( there are 48 in the current case ) , in the order of decreasing likelihood for class membership .
the algorithm is considered to have made a correct prediction if any of the n most likely classes is actually a function of the gene .
the overall " top n accuracy " is then the percentage of test genes that are correctly predicted in this fashion .
we set n = 4 here since in the mips system , a yeast gene typically has at most four different functions ( only 2.3 % of genes have 5 or more functions ) .
the tna metric can be easily used on any algorithm whose outputs are continuous variables .
for evaluation , it has numerous advantages over existing metrics such as accuracy , f - measure and cost - savings [ 16 ] .
compared to the traditional " accuracy " metric ( used in [ 24 ]) , tna is more robust to unbalanced training sets ( which is the present situation ) , where the negative examples outweigh positive examples by many times , such that a trivial algorithm that always returns a negative outcome will have a very high accuracy .
our tna metric overcomes this by using a ranking system instead .
as compared to the " cost - savings " metric used in [ 16 ] , tna is more intuitive because it is similar to the familiar notion of accuracy .
also , the cost measure in [ 16 ] is defined as fp + ( 2 x fn ) , where fp and fn are the number of false positives and false negatives respectively .
this formula not only makes the assumption that false negatives are twice as costly as false positives , it does not take into account the number of true positives and true negatives .
furthermore , tna is more intuitive and " usable " compared to f - measure , which is the harmonic mean of recall and precision .
having a combined metric that takes both recall and precision into account makes for easier comparisons , but lowers the interpretability of the results .
for instance , what does an f - measure of 0.5 mean ?
in contrast , a tna of 50 % when n = 4 is easily and unambiguously interpreted to mean that given a set of genes , half of them will have at least 1 correctly predicted function among their top 4 predicted functions .
compared techniques as mentioned earlier , we compare our fnc technique with support vector machines and k nearest neighbors .
support vector machines ( svms ) [ 18 ] are a commonly used kernel - based machine learning technique for microarray data analysis .
we use the svmlight software in our evaluation .
among the various possible kernel functions , we use the two popular kernels , the linear kernel and radial basis function ( rbf ) kernel , denoted as l - svm and rbf - svm respectively .
note that svms perform binary classification ; as such , we need to adapt it to perform multi - class classification for our purpose .
to do so , we first trained 48 different binary svms , one for each function class .
for prediction , each svm outputs a real value ( instead of a 1 or 0 ) .
traditionally , a threshold of 0 is used to determine if the test sample is in the function class or not .
here , we compare the real values output by the 48 binary classifiers , and take the n predictions with the highest values .
note also that for rbf - svm , the performance varies with 2 built - in parameters , gamma and c. parameter gamma is the " width " of the rbf while c determines the trade - off between the training error and the width of the margin separating the positive and negative training examples .
both parameters were determined heuristically , using the " grid - search method " ( i.e. systematically trying various { gamma , c } pairs ) .
in preliminary experiments , we found that varying the parameters exponentially ( e.g. c = [ 1 , 10 , 100 , 1000 ]) is a reasonable approach because performance is essentially unchanged over small changes in parameter values .
we performed the grid - search at two levels of granularity , first finding a coarse interval that produces good results , and then searching within that interval .
k nearest neighbors ( knn ) is another standard machine learning technique [ 15 ] .
for a given gene , its k nearest neighbors are found , and the function class label possessed by the majority of these k neighbors is assigned to the gene .
for n = 4 , we use k = 14 to match the mean value of k for fnc .
for multi - class predictions , the n most common labels among the k nearest neighbors are assigned to the unclassified gene .
experimental results we compare the four different prediction techniques in terms of our evaluation metric tna .
table 2 shows the detailed classification results of the 5 random runs ( note that a 5 - fold cross validation comparison is performed in each run ) for the top 20 functional classes in size .
the results show that our fnc method outperforms the other gene function prediction methods , obtaining a tna value of 65.27 % , which is 4.55 % , 23.17 % , and 4.76 % higher than knn , l - svm , rbf - svm respectively .
compared with the other techniques , fnc consistently achieved the best prediction results , indicating that our method is suited for systematic gene function prediction to help biologists in their continuing search for the biological functions of genes .
furthermore , in terms of the computational processing time , the closest performing prediction method , rbf - svm , required close to an order of magnitude more time than fnc .
table 3 shows the overall comparison results of the different prediction techniques for all the 48 functional classes .
our fnc method outperformed with 22.11 % , 3.85 % , and 5.5 % higher than the tna values obtained by l - svm , rbf - svm , and knn respectively , confirming that its superior results were not limited to the larger - sized functional classes .
we also investigate the performance of fnc with respect to two specific issues for gene function prediction on expression data : heterogeneity and multiple functions .
heterogeneity as mentioned earlier , there can be much inherent heterogeneity in the functional classes as biological processes are necessarily complex , carried out by gene and protein groups that perform various roles that contribute toward the overall biological functions ( see figures 1 and 2 for an example ) .
we investigate whether the prediction methods are affected by the underlying heterogeneity in the expression data for each biological function .
we use the heterogeneity measure as defined in [ 17 ] to quantify the degree of heterogeneity for different functional classes .
the correlation of the prediction performance against the degree of heterogeneity in the functional classes is then computed for each prediction method .
based on our evaluation dataset , the pearson correlations were - 0.50 , - 0.53 , - 0.54 , - 0.64 for fnc , knn , l - svm and rbf - svm respectively .
the results showed that our method fnc is least correlated ( hence , most robust ) with the degree of the underlying heterogeneity in the functional classes .
multi - function predictions biological functions are not stand - alone but inter - related cellular processes ; as such , it is common for a gene to hold multiple functional roles .
an important issue for gene function prediction is whether we can predict all the functions for those genes with multiple functions .
figure 3 shows the prediction results for genes with 2 , 3 and 4 functions respectively .
here , we only show the results for up to the top 20 predictions ( n <= 20 ) due to space constraints .
in all three cases , the prediction accuracy in terms of our tna metric increases with n , as expected .
calculations of area - under - the - curve ( where perfect performance gives an area of 1.0 ) confirmed that the ranking produced by our fnc method is consistently the best amongst all the methods ( figure 4 ) .
this means that our method fnc is more competent than the existing techniques in ranking the true functional classes in its top - ranked predictions .
however , we should also note that there is still much room for improvement , as the accuracy values are still not high enough for small n. conclusion the recent advances in microarray technology have certainly revolutionized the way molecular biologists study the functional relationships among genes .
while we are now able to monitor gene expression at the genomic scale using microarray technology , there are still gaps toward whole - genome functional annotation of genes using the gene expression data .
gene function prediction is challenging because of several factors .
for example , the larger functional classes are usually heterogeneous , while each gene in the genome can also play multiple functional roles .
in this paper , we have described a robust fuzzy nearest - cluster method for the systematic functional annotation of unclassified genes using dna expression data .
for each function , we do not assume homogeneity ; instead , hierarchical clustering is first used to detect the homogeneous co - expressed subgroups for each functional class .
this addresses the functional heterogeneity issue .
our fnc method then classifies the unknown genes based on their overall similarities to each detected functional clusters in a multi - class fashion .
this addresses the possibilities of genes' playing multiple functional roles in the cellular processes .
our comprehensive comparative experimental results with yeast gene expression data showed that our method can accurately predict the genes' functions , even those with multiple functional roles , and at the same time , our method 's prediction performance is also the most independent of the underlying heterogeneity of the complex functional classes , as compared to the other conventional gene function prediction approaches .
authors' contributions xll , yct and skn discussed and conceived of the algorithms .
xll designed the proposed techniques , performed analysis on the results and drafted the manuscript ; yct implemented the algorithms , performed analysis on the results ; skn supervised the project as a whole .
all authors read and approved the final manuscript .
acknowledgements this article has been published as part of bmc bioinformatics volume 7 , supplement 4 , 2006 : symposium of computations in bioinformatics and bioscience ( scbb06 ) .
the full contents of the supplement are available online at . walker mg volkmuth w sprinzak e hodgson d klingler t prediction of gene function by genome - scale expression analysis : prostate cancer - associated genes genome res 1999 9 1198 1203 10613842 10.1101 / gr.9.12.1198 ng s - k zhu z ong y - s yi - ping phoebe chen whole - genome functional classification of genes by latent semantic analysis on microarray data proceedings of the second asia - pacific bioinformatics conference : 18 - 22 jan , 2004 , dunedin , new zealand australian computer society 123 129 kim d - w lee kh lee d detecting clusters of different geometrical shapes in microarray gene expression data bioinformatics 2005 21 1927 1934 15647300 10.1093 / bioinformatics / bti251 eisen mb spellman pt brown po botstein d cluster analysis and display of genome - wide expression patterns proc natl acad sci usa 1998 95 14863 14868 9843981 10.1073 / pnas.95.25.14863 tamayo p slonim d mesirov j zhu q kitareewan s dmitrovsky e lander es golub tr interpreting patterns of gene expression with self - organizing maps : methods and application to hematopoietic differentiation proc natl acad sci usa 1999 96 2907 2912 10077610 10.1073 / pnas.96.6.2907 tavazoie s hughes jd campbell mj cho rj church gm systematic determination of genetic network architecture nat genet 1999 22 281 285 10391217 10.1038 / 10343 lukashin av fuchs r analysis of temporal gene expression profiles : clustering by simulated annealing and determining the optimal number of clusters bioinformatics 2001 17 405 414 11331234 10.1093 / bioinformatics / 17.5.405 xu y olman v xu d clustering gene expression data using a graph - theoretic approach : an application of minimum spanning trees bioinformatics 2002 18 536 545 12016051 10.1093 / bioinformatics / 18.4.536 steuer r kurths j daub co weise j selbig j the mutual information : detecting and evaluating dependencies between variables bioinformatics 2002 18 s231 s240 12386007 dembele d kastner p fuzzy c - means method for clustering microarray data bioinformatics 2003 19 973 980 12761060 10.1093 / bioinformatics / btg119 sharan r maron - katz a shamir r click and expander : a system for clustering and visualizing gene expression data bioinformatics 2003 19 1787 1799 14512350 10.1093 / bioinformatics / btg232 horn d axel i novel clustering algorithm for microarray expression data in a truncated svd space bioinformatics 2003 19 1110 1115 12801871 10.1093 / bioinformatics / btg053 dudoit s fridlyand j bagging to improve the accuracy of a clustering procedure bioinformatics 2003 19 1090 1099 12801869 10.1093 / bioinformatics / btg038 dhillon is marcotte em roshan u diametrical clustering for identifying anti - correlated gene clusters bioinformatics 2003 19 1612 1619 12967956 10.1093 / bioinformatics / btg209 duda ro hart pe stork dg pattern classification 2000 new york : wiley press brown mp grundy wn lin d cristianini n sugnet cw furey ts ares mj haussler d knowledge - based analysis of microarray gene expression data by using support vector machines proc natl acad sci usa 2000 97 262 267 10618406 10.1073 / pnas.97.1.262 mateos a dopazo j jansen r tu y gerstein m stolovitzky g systematic learning of gene functional classes from dna array expression data by using multilayer perceptrons genome res 2002 12 1703 1715 12421757 10.1101 / gr.192502 vapnik vn learning theory new york statistical learning theory 1998 new york : wiley press chu s derisi j eisen m mulholland j botstein d brown po herskowitz i the transcriptional program of sporulation in budding yeast science 1998 282 699 705 9784122 10.1126 / science.282.5389.699 derisi jl iyer vr brown po exploring the metabolic and genetic control of gene expression on a genomic scale science 1997 278 680 686 9381177 10.1126 / science.278.5338.680 spellman pt sherlock g zhang mq iyer vr anders k eisen mb brown po botstein d futcher b comprehensive identification of cell cycle - regulated genes of the yeast saccharomyces cerevisiae by microarray hybridization mol biol cell 1998 9 3273 3297 9843569 troyanskaya o cantor m sherlock g brown p hastie t tibshirani r botstein d altman rb missing value estimation methods for dna microarrays bioinformatics 2001 17 520 525 11395428 10.1093 / bioinformatics / 17.6.520 mewes hw frishman d mayer kf munsterkotter m noubibou o pagel p rattei t oesterheld m ruepp a stumpflen v mips : analysis and annotation of proteins from whole genomes in 2005 nucleic acids res 2006 34 d169 d172 16381839 10.1093 / nar / gkj148 clare a king rd predicting gene function in saccharomyces cerevisiae bioinformatics 2003 19 ii42 ii49 14534170 figures and tables figure 1 heterogenous expressions of genes for the " c - compound and carbohydrate metabolism function " ( mips code 01.05 ) figure 2 two distinctly co - expressed sub - graphs for the genes in the " c - compound and carbohydrate metabolism " function .
figure 3 comparison or results for genes with multiple ( 2 , 3 and 4 ) functions ( top to bottom respectively ) .
figure 4 comparison of areas under curves for genes with multiple functions .
note that we use the full curves ( up to n = 48 ) for calculating the area , while figure 3 shows the results for only up to n = 20 due to space constraints .
table 1 experimental conditions in composite dataset dataset type of condition # conditions ref 1 nitrogen deficiency 13 [ 19 ] 2 glucose depletion 7 [ 20 ] 3 factor - based synchronization 18 [ 21 ] 4 cdc15 - based synchronization 25 [ 21 ] 5 elutriation synchronization 14 [ 21 ] 6 cln3 and clb2 experiments 3 [ 21 ] table 2 classification results (%) for largest 20 functional classes .
values in bold indicate the top performance in each row .
functional class fnc knn l - svm rbf - svm mitochondrion 73.9 78.3 57.2 78.7 cytoskeleton 69.7 74.7 46.7 61.3 nucleotide metabolism 39.4 33.3 25.9 38.1 protein targeting , sorting and translocation 58.6 48.6 40.0 47.7 protein degradation 54.2 54.6 38.6 54.2 cell growth / morphogenesis 67.5 68.7 44.4 59.7 lipid , fatty acid and isoprenoid metabolism 31.5 29.9 29.3 34.4 stress response 57.2 58.7 36.9 55.0 amino acid metabolism 53.1 43.6 41.0 57.3 cellular sensing and response 63.1 62.7 47.8 56.8 protein modification 44.1 39.5 35.3 47.3 ribosome biogenesis 90.0 94.5 84.8 94.1 rna processing 50.7 48.4 31.6 47.7 dna processing 71.0 63.1 39.5 64.7 transported compounds 73.8 60.4 36.8 68.7 fungal / microorganismic cell type differentiation 73.5 76.2 45.6 66.0 c - compound and carbohydrate metabolism 76.3 63.9 41.2 69.7 cell cycle 86.5 79.1 44.3 76.0 rna synthesis 83.1 64.3 33.7 66.5 transport routes 88.3 72.1 41.4 66.1 average 65.27 60.72 42.10 60.51 table 3 comparison of results (%) of whole - genome functional classification .
values are derived from the mean of 5 random repetitions of 5 - fold cross - validation .
method run 1 run 2 run 3 run 4 run 5 mean l - svm 35.30 34.82 34.02 34.02 34.08 34.45 rbf - svm 53.20 53.20 51.80 52.44 52.92 52.71 knn 50.90 50.98 51.14 51.54 50.74 51.06 fnc 56.76 56.52 56.02 56.98 56.50 56.56