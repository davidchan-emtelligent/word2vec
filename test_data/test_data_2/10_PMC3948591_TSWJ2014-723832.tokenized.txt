scientificworldjournal scientificworldjournal tswj the scientific world journal 2356 - 6140 1537 - 744x hindawi publishing corporation 24772029 3948591 10.1155 / 2014 / 723832 review article summary on several key techniques in 3d geological modeling http :// orcid.org / 0000 - 0003 - 0026 - 5423 mei gang * institute of earth and environmental science , university of freiburg , albertstr .
23b , 79104 freiburg im breisgau , germany * gang mei : gang.mei @ geologie.uni - freiburg.de academic editors : g. bordogna and h. xu 2014 16 2 2014 2014 723832 23 8 2013 23 12 2013 copyright ( c ) 2014 gang mei .
2014 this is an open access article distributed under the creative commons attribution license , which permits unrestricted use , distribution , and reproduction in any medium , provided the original work is properly cited .
several key techniques in 3d geological modeling including planar mesh generation , spatial interpolation , and surface intersection are summarized in this paper .
note that these techniques are generic and widely used in various applications but play a key role in 3d geological modeling .
there are two essential procedures in 3d geological modeling : the first is the simulation of geological interfaces using geometric surfaces and the second is the building of geological objects by means of various geometric computations such as the intersection of surfaces .
discrete geometric surfaces that represent geological interfaces can be generated by creating planar meshes first and then spatially interpolating ; those surfaces intersect and then form volumes that represent three - dimensional geological objects such as rock bodies .
in this paper , the most commonly used algorithms of the key techniques in 3d geological modeling are summarized .
1. introduction " geological modelling is the applied science of creating computerized representations of portions of the earth 's crust based on geophysical and geological observations made on and below the earth surface [ 1 ]." mallet [ 2 ] defined the geological modeling as a collection of mathematical approaches for simulating the topological , geometrical , and physical properties of geological objects .
houlding [ 3 ] introduced some basic methods of geological modeling including the spatial data analysis , geological interface modeling , and geological boundary connection .
there are two essential procedures in 3d geological modeling : ( 1 ) the modeling of geological interfaces and ( 2 ) the building of three - dimensional geological objects .
usually , the geological interfaces are represented by geometric surfaces ; these geometric surfaces can be mathematically parametric such as nurbs [ 4 , 5 ] and bezier [ 6 ] or discrete such as polygonal surface meshes [ 7 , 8 ] .
both of the kinds of surfaces are widely used to model and simulate geological interfaces .
more details can be found in the literature [ 4 - 11 ] .
when adopting discrete surfaces to represent geological interfaces , the surface meshes can be generated directly in 3d ( i.e. , the surface mesh generation ) [ 11 ] , or alternatively , obtained by creating planar meshes first and then interpolating into 3d [ 8 , 9 ] .
the first method allows modelers to simulate quite complex geological interfaces , but costs much more efforts to generate surface meshes .
the second is relatively easier to implement , especially when the geological interfaces are layered ; in this method , mesh generation algorithms are accepted to create planar meshes , and interpolation algorithms are used to transform the polygonal meshes from 2d to 3d .
in this paper , we summarize such algorithms of mesh generation and spatial interpolation .
three - dimensional geological objects such as rock bodies can be represented by wire - frames , voxels ( e.g. , tetrahedron , prism , and hexahedron ) , and boundaries ( i.e. , sets of mathematically parametric surfaces or discrete surface meshes ) .
when represented by discrete surface meshes , the three - dimensional geological objects are exactly the volumes bounded with polygonal meshes .
generally , such volumes that represent geological objects are created by the intersection of surface meshes [ 2 , 7 , 8 ]. of the surface meshes , the triangulated surface is the most widely used .
this paper also describes the intersection of triangulated surfaces .
the rest of this paper is organized as follows .
the most commonly used algorithms in the planar mesh generation and spatial interpolation are summarized in sections 2 and 3 , respectively ; and then , the intersection of triangulated surfaces is briefly introduced in section 4 ; finally , we conclude this summary in section 5 .
2. planar mesh generation many algorithms for generating planar meshes have been proposed , including the delaunay triangulation method [ 12 ] , advancing front technique ( aft ) [ 13 ] , ear - cutting [ 14 ] , and the greedy algorithm [ 15 ] ; see [ 16 , 17 ] for surveys .
among them , the first one of the most popularly used is the delaunay triangulation algorithm which intends to create high quality elements with biggest smallest angles by nature , and the second one perhaps is the advancing front technique although it does not have so solid mathematical foundations as that of the delaunay triangulation method .
in this section , the delaunay triangulation method including the standard form and the constrained form , the advancing front technique will be described .
in addition , several algorithms proposed for dividing polygons [ 18 , 19 ] or for improving quality of meshes are also introduced .
2.1 .
delaunay - based triangulation the delaunay triangulation ( dt ) is the straight - line dual structure of the voronoi diagram ; see [ 20 ] for the clear definitions of the delaunay triangulation and constrained delaunay triangulation .
the voronoi diagram is a type of geometric structure that can be used to represent the proximity relationships for a set of sites / points .
the voronoi diagram was first presented by dirichlet in 1850 [ 21 ] and developed in further by voronoi [ 22 ] in 1908 .
voronoi diagrams have been successfully used in various applications such as nearest neighbor search , facility location , largest empty circle , robot navigation / path planning , and high quality triangulation [ 23 ] .
many algorithms have been designed to construct voronoi diagrams [ 24 , 25 ] ; see surveys in [ 26 , 27 ] .
a commonly used one is the incremental algorithm which inserts a new point / site into a previous existing diagram sequentially until no sites left .
the sweep line algorithm proposed by fortune [ 28 ] is more efficient in time than other incremental algorithms .
the delaunay triangulation method is currently the most popular generic mesh generation method .
there are various algorithms proposed for constructing dts , such as divide - and - conquer method [ 29 ] , sweep line [ 28 ] , and incremental algorithm [ 30 ] .
the basic idea behind the incremental algorithms is to insert points into an existing triangulation one by one and then modify some local triangles .
the incremental algorithm was thought initially proposed in 1977 by lawson [ 30 ] , and later , bowyer [ 31 ] and watson [ 32 ] developed it further in 1981 .
the above two algorithms referred as the lawson algorithm and the bowyer - watson algorithm are the most widely used delaunay triangulation algorithms .
in the standard delaunay triangulation algorithm , the input for constructing dts is only a set of discrete points .
all needed to do in the delaunay triangulation algorithm is to form finite delaunay triangles by using all given points as the required triangles' vertices .
however , in applications , the input for triangulation is usually not only composed of discrete points but also some fixed segments or faces ( in 3d ) .
those segments or faces are considered as constraints because they must be respected in triangulations .
when the input for delaunay triangulation no longer consists of only points but points and segments in the plane , the algorithm that constructs triangulation which is as close as possible to the standard delaunay triangulation is called constrained delaunay algorithm ; and the triangulation generated by the constrained delaunay algorithm is the constrained delaunay triangulation ( cdt ) [ 20 , 33 ] .
the constrained delaunay triangulation is a generalized form of the delaunay triangulation which forces some constrained segments into the resulting triangulation .
noticeably , due to introducing the constrained segments , often a cdt that contains certain required segments / edges does not meet the delaunay condition but will be as close as possible to that of the standard dt [ 20 , 33 ] .
the algorithms for constructing dts can be also improved to create cdts , such as divide - and - conquer [ 20 ] , sweep line [ 34 ] and incremental algorithm [ 35 ] .
most of them run in worst - case o ( nlog n ) time , but the most popularly used method for generation cdts is the incremental insertion .
the idea behind incremental algorithm for cdt is similar to that for dt : firstly without considering the constrained segments , a delaunay triangulation is created for the pslg 's vertices using any type of standard delaunay algorithm ; and secondly the constrained segments are inserted into the existing triangulation one by one , and several local triangles need to be updated to satisfy the delaunay property as close as possible after each insertion .
a quite robust and fast framework for constructing the cdts is the package triangle [ 35 ] .
2.2 .
advancing front technique ( aft ) the advancing front technique ( aft ) is one of the most popular approaches for generating triangulations .
the classical form of the aft for mesh generation was described by [ 13 , 36 ] and some improved versions of the classical form have been developed ; see [ 37 - 40 ] .
the aft has become a successful method for creating high quality unstructured triangular or tetrahedral meshes for domains of arbitrary shape .
in addition , it has been extended to generate quadrilateral meshes in 2d and hexahedral meshes in 3d ; see [ 41 - 43 ] .
general scheme .
the aft is implemented based on the updating ( advancing ) of the so - called front ; the front is a set of edges in 2d or a set of faces in 3d .
the aft can be considered as an iterative procedure that starts from the discretization of a given boundary and then intends to mesh those currently unmeshed region of the target domain with some type of specific elements such as triangles or tetrahedrons .
a simple application example is presented in figure 1 to illustrate the procedure of the aft approach .
in the classical aft , the field points that will be used as the candidates of the optimal vertices for those selected front entities are created synchronously when needed , rather than before creating any mesh element ( i.e. , preplaced interior points ) .
based on the classical aft , many variants have been presented ; see [ 44 ] for a survey .
the inherent procedure in all aft - based algorithms is the local inserting and updating according to some type of geometric criteria .
in the classical aft , the creations of mesh vertices and elements are synchronous .
however , in some variants of the aft , the interior points that will be adopted as the mesh vertices are precreated before forming mesh elements ; and when creating new elements , the optimal vertices are chosen from the existing interior points rather than created when needed .
the most important feature of the aft approach is that it intends to create high quality elements and well - graded meshes , especially near the boundary of mesh domain .
the feature of nicely respecting to the domain boundary is quite useful for generating meshes for the domain with very complex boundaries .
the main disadvantage of the aft approach is its convergence : compared to the delaunay - based algorithms , the aft does not have the sold mathematical foundations and cannot be proved to be always convergent strictly in mathematics .
2.3 .
polygon triangulation polygon partitioning is the procedure of decomposing a polygonal area into simpler components such as triangles [ 45 , 46 ] , trapezoids [ 47 ] , or even subpolygons [ 48 ] .
usually , polygons are divided into sets of triangles ; and this partitioning is also referred to as polygon triangulation .
a family of the most commonly used algorithms for triangulating polygons is the ear - cutting method .
removing an ear results in forming a new polygon that still meets the " two ears " condition ( proved by meisters [ 14 ]) and repetitions can be done until there is only one triangle left .
this is known as the ear - clipping or ear - cutting algorithm .
the ear - clipping triangulation algorithm consists of searching an ear and then cutting it off from current polygon .
the original version of meisters 's ear - clipping algorithm runs in o ( n 3 ) time , with o ( n ) time spent on checking whether a newly formed triangle is valid .
rourke [ 18 ] simply modified and reorganized meisters 's algorithm and made the new version of ear - clipping algorithm run in o ( n 2 ) time .
an efficient technique named " prune - and - search " for finding an ear in the linear time was discovered by elgindy [ 49 ] .
held [ 50 ] designed a completely reliable triangulation algorithm and engineered its code fist .
the generic ear - cutting algorithms are only capable of triangulating simple polygons that have no holes .
when polygons have holes ( multiply connected polygonal area ) , a preprocessing of creating " bridge " edges needs to be done in order to transform the polygon with holes into a single polygon .
after transforming a polygon with holes to a degenerate polygon , the ear - cutting algorithms can be accepted to generate the final triangulation ; see figure 2 .
noticeably , some vertices can be accepted to form triangle twice due to introducing those " bridge " edges .
creating " bridge " edges is widely used to divide a general closed domain into several simply connected , convex subdomains ; and delaunay triangulations for subdomains then are obtained in turn and patched together to generate the whole triangulation or then its dual graph , voronoi diagram ; see tipper [ 25 ] .
similarly , held [ 50 ] adopted " bridge " edges to transform a multiply connected polygonal area into a single polygon which can be triangulated by ear - clipping based algorithms .
2.4 .
mesh smoothing usually , a mesh needs to be optimized after being newly created to improve its quality , and various methods have been developed to deal with this issue .
mesh smoothing is the method for improving the mesh quality by adjusting the positions of mesh vertices without altering the topology of the mesh .
the basic idea behind mesh smoothing is to make all elements in a mesh be their best shapes by repositioning the vertices' coordinates .
numerous papers have been published on the topic of mesh smoothing .
in the literature [ 52 ] , mei et al. introduced a useful classification to divide the methods of mesh smoothing into four types : ( 1 ) geometry - based methods , ( 2 ) optimization - based methods , ( 3 ) physics - based methods , and ( 4 ) hybrid methods .
geometry - based mesh smoothing methods obtain new node locations either by using geometric rules or local optimization techniques or by minimizing objective functions .
the most popular geometry - based method is laplacian smoothing [ 53 ] , which at each iteration step repositions each node at the centroid of its neighboring nodes .
to improve the performance of its basic form , some smart , constrained or weighted variations have been proposed [ 54 - 56 ] .
other simple or effective geometry - based methods include the angle - based approach [ 57 ] , the geometric element transformation method ( getme ) [ 58 ] , a projecting / smoothing method [ 59 ] , an algebraic method [ 60 ] , the target - matrix paradigm [ 61 ] , the effective variational method [ 62 ] , and a novel method based on quadric surface fitting , vertex projecting , curvature estimating , and mesh labeling [ 63 ] .
optimization - based methods obtain the smoothed node positions by minimizing some given distortion metric .
these methods give better results than most of the geometry - based methods , especially in concave regions ; however , they are computationally more expensive .
some of the optimization - based methods are described in [ 64 - 66 ] .
physics - based mesh smoothing methods operate by physical processing [ 67 ] or by solving simple physics problems .
for instance , shimada et al .
[ 68 ] proposed a method which treats nodes as the centers of bubbles and obtained the smoothed node locations by deforming these bubbles against each other .
a similar algorithm , the pliant method , is presented in [ 69 ] .
hybrid mesh smoothing methods combine two or more basic methods ; this is for the purpose of improving the performance of each .
some of them are the combinations of laplacian smoothing with various optimization - based methods [ 70 - 72 ] .
the most commonly used mesh smoothing method is laplacian smoothing , which in its original form [ 53 ] moves each node to be at the average of all the nodes connected to it by element edges .
laplacian smoothing is an iterative algorithm ; the iterations will repeat until there are no points that are moved in the same iteration step beyond a given distance tolerance .
several modifications and enhancements of this method have been described in [ 54 , 72 ] .
a noniterative method called direct method was introduced by balendran [ 73 ] .
an iterative modification of the direct method , the modified direct method ( mdm ) , is presented in [ 74 ] .
3. interpolation algorithms the interpolation is the method of obtaining the evaluation value at an unknown point according to a set of known data points based on some types of relationships .
in mathematics , there are various kinds of interpolation approaches such as linear interpolation , polynomial interpolation , spline interpolation , trilinear interpolation , and gaussian interpolation [ 75 ] .
in geosciences , the most popular interpolation methods perhaps are the following three : kriging interpolation [ 76 ] , discrete smooth interpolation ( dsi ) [ 77 , 78 ] , and inverse distance weighted ( idw ) [ 79 ] .
in this section , these three methods will be briefly summarized .
3.1 .
kriging method in three - dimensional geological modeling , kriging is usually adopted to generate guaranteed geological interfaces with effectively conforming to the original data and does not depend on existing meshes .
kriging interpolation method [ 76 ] is an optimal geostatistical estimator for the regionalized variables within a limited area based on the variogram or covariance .
the kriging method was originally developed by the south african mining engineer krige [ 80 , 81 ] .
the mathematics was further developed by matheron [ 82 ] in 1963 .
more details about the kriging method can be found in [ 83 ] .
for a set of regionalized variables z ( x ) , kriging estimates the expected value z ( x 0 ) at the location x 0 where the observation is not available by using a linear weighted sum of the known values z ( x 1 ) , z ( x 2 ),... , z ( x n ) at locations x 1 , x 2 ,... , x n , such that ( 1 ) z ( x0 )= sumi = 1nlambdai.z ( xi ) , sumi = 1nlambdai = 1 , where lambda i is the weights at the location x i which can be calculated according to the system of equations of the kriging .
the estimator of the kriging is in fact the calculation of a linear weighted sum .
thus , the objective in kriging method is to determine those weights lambda i ( i = 0,1 ,... , n ) .
there are two widely used estimators of the kriging method : the ordinary kriging ( ok ) and universal kriging ( uk ) .
both of them estimate the interpolation values with a linear weighted sum ( 1 ) .
the differences of them are the calculation of the weights lambda i in different ways due to different assumptions .
the ordinary kriging assumes that the distribution of the observations meets the second order stationary condition ; in other words , the mean of all input sample points is a constant value .
the universal kriging assumes that the mean is no longer constant but as a polynomial function referred as the drift or trend .
3.2 .
inverse distance weighted ( idw ) idw ( inverse distance weighted / weighting ) [ 79 ] is a very simple and widely used geospatial interpolation method .
the expected value of an interpolated point ( unknown point ) is the weighted average of all ( or sometimes part of ) the sample points .
the weights only depend on the distances between the interpolation points and the sample points .
a general form of finding an interpolated value z at a given point x based on samples z i = z ( x i ) for i = 1 , 2 ,... , n via the idw can be represented with the following formula : ( 2 ) z ( x )= sumi = 1nomegai ( x ) zisumj = 1nomegaj ( x ) , omegai ( x )= 1d ( x,xi ) p. the above equations are the simple idw weighting functions defined by shepard [ 79 ] .
in the equations , x denotes an interpolated point , x i is a sample point , d is the distance from the known point x i to the unknown point x , n is the total number of known points used in interpolation , and p is a positive real number called the power parameter .
in contrast to kriging , idw also obtains the expected values of unknown points ( interpolated points ) by weighting average of the values of known points ( data points ) .
the name , that is , inverse distance , of this method was motivated by the weighted average applied since it resorts to the inverse of the distance to each known point when calculating the weights .
the difference between idw and kriging is that they calculate the weights by different means .
in kriging , it is needed to calculate the spatial correlations between ( 1 ) all sample points and ( 2 ) the interpolated points with the sample points and the spatial correlations that are expressed via the variogram or covariance depend on the relative positions of points rather than the distances between points .
in the idw , however , the weights and correlations are only involved with the distances between points ; two distinct sample points that have the identical distance to a same interpolated point definitely have identical weights .
this approach of determining the weights only depending on distance is reasonable in some cases such as analyzing the propagation of sound or the spread of pollutants .
but in other cases , for example , reconstructing the ground surface or creating dem ( digital elevation model ) , the idw is not as effective as the kriging .
3.3 .
discrete smooth interpolation ( dsi ) the discrete smooth interpolation ( dsi ) is an interpolation algorithm proposed by mallet [ 78 ] , which has become one of the key techniques in the geological modeling software gocad [ 84 ] .
the basic ideas behind dsi are as follows : for those known and unknown nodes on a " grid " of a discrete natural object , the values attached to the unknown nodes can be obtained by making the unknown nodes satisfy the constraints ( e.g. , the roughness criterions ) defined by the known nodes .
this interpolation method can be applied in any dimension since it relies on the topology of nodes on a " grid. " more details about the dsi can be found in [ 2 ] .
4. intersection of triangulated surfaces the boolean operation ( including the intersecting ) of triangular surface meshes is currently well studied .
the algorithms for calculating the intersection of triangulated surfaces have been widely used in the field of cad / cae / cam ; these algorithms can be also used to build three - dimensional geological bodies .
lindenbeck et al .
[ 85 ] developed the tricut package by coupling two reliable open source programs , the rapid library [ 86 ] for collision detection and the triangle library [ 35 ] for robust constrained delaunay triangulation to cut intersecting triangle meshes .
shostko et al .
[ 87 ] introduced an algorithm that constructs surface meshes from a given set of intersecting triangulated surfaces .
lo [ 88 ] proposed an algorithm for determining the intersection lines based on tracing the neighbours of intersecting triangles when calculating the intersection of triangulated surfaces .
guo et al .
[ 89 ] gave an algorithm to implement the boolean operation of two stl solids based on tracing the intersection line segments to form loops .
pavic ' et al .
[ 90 ] developed a hybrid method which combines polygonal and volumetric computations and representations for performing boolean operations over polygonal meshes .
wang [ 91 ] presented a new approach to compute the approximate boolean operations of two freeform polygonal mesh solids efficiently with the help of layered depth images ( ldis ) .
zhao et al .
[ 92 ] adopted nvidia 's cuda [ 12 ] computing environment to develop an efficient , parallel , and scalable framework for evaluating approximate boolean operations on polygonal meshes .
a general algorithm for computing the intersection of manifold surfaces was presented in [ 93 ] , which relies on a comprehensive list of edge - triangle intersection cases combined with an intersection tracking algorithm that utilizes both topological and geometrical consistency checks .
karamete et al .
[ 94 ] used elementary computational - geometry operations such as , facet - segment intersection , point containment in simplices , and edge recovery in a plane , to produce high - level boolean operations .
mei and tipper [ 95 ] proposed a novel technique instead of inside / outside classification to distinguish the resulting union , subtraction , and intersection parts of intersected triangular surface meshes .
in calculating the intersection of triangulated surfaces , the intersection of a pair of triangles is the essential basis for the further operations such as tracing intersection lines ( loops ) and clipping the intersected surfaces .
when computing the intersections for large and complex models composed of plenty of triangles , solutions are needed to speed up the procedure of intersecting .
the following summarizes popular approaches for addressing two problems : ( 1 ) how to calculate the intersection of triangles fast and ( 2 ) how to speed up the intersection of surfaces effectively .
4.1 .
triangle - triangle intersection algorithm several quite efficient approaches have been proposed to calculate the intersection of a pair of triangles in 3d , including moller 's algorithm [ 96 ] , held 's algorithm [ 97 ] , devillers and guigue 's algorithm [ 98 , 99 ] , tropp 's algorithm [ 100 ] , and shen 's algorithm [ 101 ] .
moller 's algorithm .
moller [ 96 ] proposed a method named " interval overlap " for checking whether a pair of triangles intersects ( figure 3 ) .
the basic idea behind moller 's algorithm is that if the degenerate case that there is a triangle such as t 1 whose three vertices completely locate on one side of the underlying plane of the other triangle t 2 is rejected , then the intersection of the two underlying planes of t 1 and t 2 denoted as a line l will intersect t 1 and t 2 .
the intersections of the line l with the triangles t 1 and t 2 are two line segments ( also called intervals ) .
if those intervals overlap , then the triangles t 1 and t 2 intersect , otherwise , not intersect .
held 's algorithm .
very similar to the moller 's algorithm , the held 's algorithm [ 97 ] is also carried out via dimension deduction .
however , in moller 's algorithm , the determination of intersection of two triangles in 3d is deduced to compute the overlap of two line segments in 1d ; while in held 's algorithm , the calculation of the intersection of two triangles is transformed to determine the intersection of a line segment with a triangle in 2d .
devillers and guigue 's algorithm .
in devillers and guigue 's algorithm [ 98 , 99 ] , each vertex of each triangle is classified with respect to the other triangle using six orientation predicates : the triangle t 1 is first tested for intersection with the plane pi 2 and the algorithm classifies the vertices of t 1 with respect to the plane pi 2 by simply comparing the signs of the three determinants [ p 2 , q 2 , r 2 , p 1 ] , [ p 2 , q 2 , r 2 , q 1 ] , and [ p 2 , q 2 , r 2 , r 1 ] ; see figure 4 .
tropp 's algorithm .
unlike moller 's or held 's algorithms , the tropp 's algorithm [ 100 ] intends to carry out the triangle - triangle intersection test in the algebraic viewpoint , rather than the geometric viewpoint .
in the tropp 's algorithm , the process of determining the intersection of a pair of triangles is well speeded up by taking advantage of the linearity of arithmetic operations on relevant metrics and the strong linear relations between the columns of relevant metrics .
4.2 .
accelerations for the intersecting the procedure of computing the intersections would be quite slow when there are a huge number of triangles of the surface meshes .
accelerations need to be carried out to improve the efficiency .
generally , there are two commonly used strategies : the first is to reduce the intersection tests ( also called collision detection tests ) of triangles by using space partitioning techniques and the second is to implement the intersecting in parallel by taking advantage of those libraries designed for parallelization .
in the following paragraphs , the above two strategies will be introduced .
4.2.1 .
speeding up by space partitioning the basic ideas behind space partitioning are as follows : space is divided into cells ( i.e. , the subspaces ) ; object primitives are placed into cells ( e.g. , octree ) ; see figure 5 ( b ) ; object primitives within the same cell are checked for collision ; see figure 5 ( c ) ; pairs of primitives that do not share the same cell are not tested .
figure 5 shows a simple procedure of performing the space partitioning .
the basic idea behind this strategy is easy to understand : a pair of triangles within the same subspace needed to check for intersection ; and any pair of triangles that do not locate inside the same subspace is not needed to test .
the objective of such procedure is to accurately find out all pairs of potentially intersected triangles in a short time to reduce computational cost .
many techniques based on space partitions such as bsp [ 103 ] , octree [ 90 ] , obb trees [ 86 ] , aabb trees [ 104 ] , and uniform grid [ 105 ] have been developed to realize this goal .
the easiest space partitioning is the dividing of space into a structured grid .
each element of the grid , that is , one of the subspaces , is a cuboid or even a cube .
this method of partitioning is easy to realize in programming .
the disadvantage of this kind of dividing is that plenty of subspaces are created ; and the determination for checking which triangles locate within the same space is also time - consuming .
a better partitioning is by using octree [ 102 ] ; see figure 5 .
the first step is to divide the target space into 8 subspaces , then putting the geometric objects such as triangles into those 8 subspaces and checking the number and density of the objects within the same subspace to decide whether it is needed to divide a subspace into 8 smaller subspaces .
this procedure of dividing iterates until some kind of conditions or requirements are met .
the advantage of octree is that it is " smart " to decide whether it is needed to create the next level of subspaces for a previously created subspace .
the disadvantage is that the establishment of octree is more complicated than that of the grid .
4.2.2 .
speeding up by parallelization the intersection of a pair of triangles does not affect the intersection of another pair .
this is the precondition of conducting parallelization for computing the intersections .
hence , several pairs of triangles can be calculated in parallel to reduce the computational cost ; this is the basic idea behind the strategy of speeding up the intersection of triangulated surfaces by parallelization .
there are many models designed for implementing parallelization ; the four most frequently used are openmp [ 106 ] , mpi [ 107 ] , cuda [ 108 ] , and opencl [ 109 ] .
openmp is an api that supports multiplatform shared memory multiprocessing programming .
mpi ( message passing interface ) is a library specification designed for high performance on both massively parallel machines and on workstation clusters .
cuda is a parallel computing platform and programming model , which enables increases in computing performance by harnessing the power of gpus .
the algorithms for calculating the intersection of triangles , such as the moller 's algorithm [ 96 ] , can be easily implemented within the popular parallelization models such as openmp or cuda and become parallel and thus much more efficient in time when compared to their corresponding serial versions [ 92 , 95 ] .
the following piece of code is an example of implementing the parallelization from serial code to parallel based on openmp ( see algorithm 1 ) .
5. conclusion we have summarized the most commonly used algorithms and approaches in mesh generation , spatial interpolation , and surface intersection .
those techniques are widely used when building 3d geological models .
the most commonly used algorithms for generating triangular meshes in 2d , including the delaunay - based , the aft , and the ear - cutting , have been summarized .
also , the mesh smoothing algorithms for improving mesh quality are reviewed .
these generic mesh generation algorithms are usually accepted to create planar meshes for modeling geological interfaces .
we have also introduced three spatial interpolation algorithms , for example , the kriging method , the dsi , and the idw .
in addition , one of the most important geometric computations , the intersection of triangulated surfaces , is summarized .
we have listed the algorithms for calculating the intersection of a pair of triangles and explained how to speed up the intersection of triangulated surfaces according to the strategies of parallelization and space partitioning .
a brief overview of several key techniques in 3d geological modeling is intended to present in this summary .
conflict of interests the author declares that there is no conflict of interests regarding the publication of this paper .
1 geomodelling 2013 , http :// en.wikipedia.org / wiki / geologic _ modelling 2 mallet j - l geomodeling 2002 new york , ny , usa oxford university press applied geostatistics series 3 houlding sw 3d geoscience modeling : computer techniques for geological characterization 3d geoscience modeling : computer techniques for geological characterization 1994 new york , ny , usa springer 4 fisher t wales r turner a three dimensional solid modeling of geo - objects using non - uniform rational b - splines ( nurbs ) three - dimensional modeling with geoscientific information systems 1992 354 amsterdam , the netherlands springer 85 105 nato asi series 5 zhong d - h li m - c song l - g wang g enhanced nurbs modeling and visualization for large 3d geoengineering applications : an example from the jinping first - level hydropower engineering project , china computers and geosciences 2006 32 9 1270 1282 2 - s2.0 - 33747377201 6 de kemp ea visualization of complex geological structures using 3 - d bezier construction tools computers and geosciences 1999 25 5 581 5597 7 moore rr johnson se three - dimensional reconstruction and modelling of complexly folded surfaces using mathematica computers and geosciences 2001 27 4 401 418 2 - s2.0 - 0035342080 8 xu n tian h wire frame : a reliable approach to build sealed engineering geological models computers and geosciences 2009 35 8 1582 1591 2 - s2.0 - 67650564851 9 mallet jl discrete modeling for natural objects mathematical geology 1997 29 2 199 219 2 - s2.0 - 0030874469 10 pea jmv a program in pascal to simulate the superposition of two or three fold systems computers and geosciences 2000 26 3 341 3349 11 frank t tertois a - l mallet j - l 3d - reconstruction of complex geological interfaces from irregularly distributed and noisy point data computers and geosciences 2007 33 7 932 943 2 - s2.0 - 34249669101 12 delaunay b sur la sphere vide izvestia akademii nauk sssr 1934 6 793 800 13 lo sh a new mesh generation scheme for arbitrary planar domains international journal for numerical methods in engineering 1985 21 8 1403 1426 2 - s2.0 - 0022113638 14 meisters gh polygons have ears american mathematical monthly 1975 82 6 648 651 15 dickerson mt scot drysdale rl mcelfresh sa welzl e fast greedy triangulation algorithms computational geometry 1997 8 2 67 86 2 - s2.0 - 0348050331 16 ho - le k finite element mesh generation methods : a review and classification computer - aided design 1988 20 1 27 38 2 - s2.0 - 0023842528 17 owen sj a survey of unstructured mesh generation technology 3 proceedings of the 7th international meshing roundtable1998 26 28 18 o'rourke j computational geometry in c 1998 new york , ny , usa cambridge university press 19 berg md cheong o kreveld mv overmars m computational geometry : algorithms and applications 2008 new york , ny , usa springer 20 chew lp constrained delaunay triangulations algorithmica 1989 4 1 - 4 97 108 2 - s2.0 - 52449144935 21 dirichlet gl uber die reduktion der positiven quadratischen formen mit drei unbes - timmten ganzen zahlen journal fur die reine und angewandte mathematik 1850 40 209 227 22 voronoi g nouvelles applications des parametres continus a la theorie des formes quadratiques .
deuxieme memoire .
recherches sur les parallelloedres primitifs journal fur die reine und angewandte mathematik 1908 1908 134 198 287 23 okabe a boots b sugihara k chiu sn spatial tessellations : concepts and applications of voronoi diagrams 2000 2nd edition john wiley & sons wiley series in probability and statistics 24 tipper jc a straightforward iterative algorithm for the planar voronoi diagram information processing letters 1990 34 3 155 160 2 - s2.0 - 0025703658 25 tipper jc fortran programs to construct the planar voronoi diagram computers and geosciences 1991 17 5 597 632 2 - s2.0 - 0025920587 26 aurenhammer f voronoi diagrams a survey of a fundamental geometric data structure acm computing surveys 1991 23 3 345 405 27 fortune s goodman je o'rourke j voronoi diagrams and delaunay triangulations handbook of discrete and computational geometry 2004 chapter 23 boca raton , fla , usa chapman and hall / crc 513 528 28 fortune s a sweepline algorithm for voronoi diagrams algorithmica 1987 2 1 - 4 153 174 2 - s2.0 - 52449147685 29 lee dt schachter bj two algorithms for constructing a delaunay triangulation international journal of computer & information sciences 1980 9 3 219 242 2 - s2.0 - 0000029675 30 lawson cl software for c 1 surface interpolation mathematical software iii 1977 new york , ny , usa academic press 31 bowyer a computing dirichlet tessellations the computer journal 1981 24 2 162 166 2 - s2.0 - 0019563894 32 watson df computing the n - dimensional delaunay tessellation with application to voronoi polytopes the computer journal 1981 24 2 167 172 2 - s2.0 - 0019563697 33 lee d - t lin ak generalized delaunay triangulation for planar graphs discrete & computational geometry 1986 1 1 201 217 2 - s2.0 - 0000508273 34 domiter v zalik b sweep - line algorithm for constrained delaunay triangulation international journal of geographical information science 2008 22 4 449 462 2 - s2.0 - 41449099563 35 shewchuk jr triangle : engineering a 2d quality mesh generator and delaunay triangulator proceedings of the workshop on applied computational geometry , towards geometric engineering ( fcrc / wacg'96 ) 1996 springer 203 222 36 peraire j vahdati m morgan k zienkiewicz oc adaptive remeshing for compressible flow computations journal of computational physics 1987 72 2 449 466 2 - s2.0 - 45949113136 37 lohner r parikh p generation of three - dimensional unstructured grids by the advancing - front method international journal for numerical methods in fluids 1988 8 10 1135 1149 2 - s2.0 - 0024103736 38 mavriplis dj an advancing front delaunay triangulation algorithm designed for robustness journal of computational physics 1995 117 1 90 101 2 - s2.0 - 0002793322 39 schoberl j netgen an advancing front 2d / 3d - mesh generator based on abstract rules computing and visualization in science 1997 1 1 41 52 40 shostko a lohner r three - dimensional parallel unstructured grid generation international journal for numerical methods in engineering 1995 38 6 905 925 2 - s2.0 - 0028976462 41 blacker td stephenson mb paving : a new approach to automated quadrilateral mesh generation international journal for numerical methods in engineering 1991 32 4 811 847 2 - s2.0 - 0026221782 42 blacker td meyers rj seams and wedges in plastering : a 3 - d hexahedral mesh generation algorithm engineering with computers 1993 9 2 83 93 2 - s2.0 - 0027307145 43 staten m owen s blacker t unconstrained paving and plastering : a new idea for all hexahedral mesh generation proceedings of the 14th international meshing roundtable2005 springer 399 416 44 lohner r progress in grid generation via the advancing front technique engineering with computers 1996 12 3 - 4 186 210 2 - s2.0 - 0030411063 45 chazelle b a theorem on polygon cutting with applications proceedings of the 23rd annual symposium on foundations of computer science ( sfcs'08 ) 1982 ieee 339 349 46 chazelle b triangulating a simple polygon in linear time discrete & computational geometry 1991 6 1 485 524 2 - s2.0 - 51249179364 47 seidel r a simple and fast incremental randomized algorithm for computing trapezoidal decompositions and for triangulating polygons computational geometry 1991 1 1 51 64 2 - s2.0 - 0026282692 48 feng h - y pavlidis t decomposition of polygons into simpler components : feature generation for syntactic pattern recognition ieee transactions on computers 1975 24 6 636 650 2 - s2.0 - 0016521053 49 elgindy h everett h toussaint g slicing an ear using prune - and - search pattern recognition letters 1993 14 9 719 722 2 - s2.0 - 0027870738 50 held m fist : fast industrial - strength triangulation of polygons algorithmica 2001 30 4 563 596 2 - s2.0 - 0013460131 51 mei g tipper jc xu n ear - clipping based algorithms of generating high - quality polygon triangulation 212 proceedings of the international conference on information technology and software engineering2013 springer 979 988 52 mei g tipper jc xu n the modified direct method : an approach for smoothing planar and surface meshes http :// arxiv.org / abs / 1212.3133 53 herrmann lr laplacian - isoparametric grid generation scheme journal of the engineering mechanics division 1976 102 5 749 756 2 - s2.0 - 0017005644 54 field da laplacian smoothing and delaunay triangulations communications in applied numerical methods 1988 4 6 709 712 2 - s2.0 - 0024105978 55 hansbo p generalized laplacian smoothing of unstructured grids communications in numerical methods in engineering 1995 11 5 455 464 56 mao z ma l zhao m li z a modified laplacian smoothing approach with mesh saliency smart graphics 2006 4073 new york , ny , usa springer 105 113 lecture notes in computer science 57 zhou t shimada k an angle - based approach to two - dimensional mesh smoothing proceedings of the 9th international meshing roundtable2000 373 384 58 vartziotis d wipper j the geometric element transformation method for mixed mesh smoothing engineering with computers 2009 25 3 287 301 2 - s2.0 - 68949216265 59 escobar jm montenegro r rodriguez e montero g simultaneous aligning and smoothing of surface triangulations engineering with computers 2011 27 1 17 29 2 - s2.0 - 79951509867 60 escobar jm montero g montenegro r rodriguez e an algebraic method for smoothing surface triangulations on a local parametric space international journal for numerical methods in engineering 2006 66 4 740 760 2 - s2.0 - 33646074028 61 knupp p introducing the target - matrix paradigm for mesh optimization via node - movement in proceedings of the 19th international meshing roundtable2010 67 83 62 jiao x wang d zha h simple and effective variational optimization of surface and volume triangulations engineering with computers 2011 27 1 81 94 2 - s2.0 - 77954951423 63 wang j yu z a novel method for surface mesh smoothing : applications in biomedical modeling proceedings of the 18th international meshing roundtable2009 195 210 64 freitag l jones m plassmann p an efficient parallel algorithm for mesh smoothing proceedings of 4th international meshing roundtable1995 47 58 65 knupp pm achieving finite element mesh quality via optimization of the jacobian matrix norm and associated quantities .
part i - - a framework for surface mesh optimization international journal for numerical methods in engineering 2000 48 3 401 420 2 - s2.0 - 0033686077 66 shivanna k grosland n magnotta v an analytical framework for quadrilateral surface mesh improvement with an underlying triangulated surface definition proceedings of the 19th international meshing roundtable2010 85 102 67 lohner r morgan k zienkiewicz o adaptive grid refinement for the compressible eeuler equations accurency estimates and adaptive refinements in finite element computations 1986 new york , ny , usa john wiley & sons 281 297 wiley series in numerical methods in engineering 68 shimada k yamada a itoh t anisotropic triangular meshing of parametric surfaces via close packing of ellipsoidal bubbles proceedings of the 6th international meshing roundtable1997 375 390 69 bossen f heckbert ps a pliant method for anisotropic mesh generation proceedings of the 5th international meshing roundtable1996 63 74 70 canann sa tristano jr staten ml an approach to combined laplacian and optimization - based smoothing for triangular , quadrilateral , and quad - dominant meshes proceedings of 7th international meshing roundtable1998 479 494 71 chen z tristano jr kwok w combined laplacian and optimization - based smoothing for quadratic mixed surface meshes proceedings of the 12th international meshing roundtable2003 201 213 72 freitag la on combining laplacian and optimization - based mesh smoothing techniques trends in unstructured mesh generation 1997 37 43 73 balendran b a direct smoothing method for surface meshes proceedings of the 8th international meshing roundtable 1999 189 193 74 mei g tipper jc xu n the modified direct method : an iterative approach for smoothing planar meshes procedia computer science 2013 18 2436 2439 75 bronshtein i semendyayev k musiol g muehlig h handbook of mathematics 2007 new york , ny , usa springer 76 oliver ma webster r kriging : a method of interpolation for geographical information systems international journal of geographical information systems 1990 4 3 313 332 2 - s2.0 - 0025620076 77 mallet j - l discrete smooth interpolation acm transactions on graphics 1989 8 2 121 144 78 mallet j - l discrete smooth interpolation in geometric modelling computer - aided design 1992 24 4 178 191 2 - s2.0 - 44049119655 79 shepard d a two - dimensional interpolation function for irregularly - spaced data proceedings of the 23rd acm national conference 517 524 80 krige dg a statistical approach to some mine valuation and allied problems on the witwatersrand [ m.s. thesis ] 1951 university of the witwatersrand 81 krige dg a statistical approach to some basic mine valuation problems on the witwatersrand journal of the chemical , metallurgical and mining society of south africa 1951 52 6 119 139 82 matheron g principles of geostatistics economic geology 1963 58 8 1246 1266 83 stein ml interpolation of spatial data : some theory for kriging 1999 new york , ny , usa springer 84 gocad , 2013 , http :// www.gocad.org 85 lindenbeck ch ebert hd ulmer h lavorante lp pflug r tricut : a program to clip triangle meshes using the rapid and triangle libraries and the visualization toolkit computers and geosciences 2002 28 7 841 850 2 - s2.0 - 0036681334 86 gottschalk s lin mc manocha d obbtree : a hierarchical structure for rapid interference detection proceedings of the 23rd annual conference on computer graphics and interactive techniquesaugust 1996 171 180 2 - s2.0 - 0030421708 87 shostko aa lohner r sandberg wc surface triangulation over intersecting geometries international journal for numerical methods in engineering 1999 44 9 1359 1376 2 - s2.0 - 0033100064 88 lo sh wang wx a fast robust algorithm for the intersection of triangulated surfaces engineering with computers 2004 20 1 11 21 2 - s2.0 - 9544237003 89 guo k - b zhang l - c wang c - j huang s - h boolean operations of stl models based on loop detection the international journal of advanced manufacturing technology 2007 33 5 - 6 627 633 2 - s2.0 - 34250874127 90 pavic d campen m kobbelt l hybrid booleans computer graphics forum 2010 29 1 75 87 2 - s2.0 - 76649101120 91 wang ccl approximate boolean operations on large polyhedral solids with partial mesh reconstruction ieee transactions on visualization and computer graphics 2011 17 6 836 849 2 - s2.0 - 79954448148 20714023 92 zhao h wang ccl chen y jin x parallel and efficient boolean on polygonal solids visual computer 2011 27 6 - 8 507 517 2 - s2.0 - 79959524840 93 elsheikh ah elsheikh m a reliable triangular mesh intersection algorithm and its application in geological modelling engineering with computers 2014 30 1 143 157 94 karamete bk dey s mestreau el aubry r bulat - jara fa an algorithm for discrete booleans with applications to finite element modeling of complex systems finite elements in analysis and design 2013 68 10 27 95 mei g tipper jc simple and robust boolean operations for triangulated surfaces http :// arxiv.org / abs / 1308.4434 96 moller t a fast triangle - triangle intersection test journal of graphics tools 1997 2 2 25 30 97 held m erit - - a collection of efficient and reliable intersection tests journal of graphics tools 1997 2 4 25 44 98 devillers o guigue r faster triangle - triangle intersection tests 2002 rr - 4488 inria 99 guigue r devillers o fast and robust triangle - triangle overlap test using orientation predicates journal of graphics tools 2003 8 1 25 32 100 tropp o tal a shimshoni i a fast triangle to triangle intersection test for collision detection computer animation and virtual worlds 2006 17 5 527 535 2 - s2.0 - 33751508370 101 shen h heng ra tang z a fast triangle - triangle overlap test using signed distances journal of graphics tools 2003 8 1 17 23 102 suter j introduction to octrees 1999 , http :// www.flipcode.com / archives / introduction _ to _ octrees.shtml 103 campen m kobbelt l exact and robust ( self - ) intersections for polygonal meshes computer graphics forum 2010 29 2 397 406 2 - s2.0 - 77952851244 104 van den bergen g efficient collision detection of complex deformable models using aabb trees journal of graphics tools 1997 2 4 1 13 105 ericson c real - time collision detection 2004 boston , mass , usa morgan kaufmann 106 openmp , 2013 , http :// www.openmp.org 107 mpi , 2013 , http :// www.mcs.anl.gov / research / projects / mpi / 108 cuda , 2013 , http :// www.nvidia.com / object / cuda _ home _ new.html 109 opencl , 2013 , http :// www.khronos.org / opencl / figure 1 the aft for generating planar triangulations .
figure 2 creating bridges and triangulation for the polygon with holes [ 51 ] .
figure 3 intersection of triangle with triangle [ 96 ] .
figure 4 computing the intersection of triangle - triangle with devillers algorithm [ 98 , 99 ] .
figure 5 the creation of octree [ 102 ] .
algorithm 1